{"ast":null,"code":"import _objectSpread from\"/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Plus,Search,X,GripVertical,Trash2,ChevronDown,Target,Calendar,BarChart3,Dumbbell,Minus,RotateCcw}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WorkoutApp=()=>{const exerciseLibraryByMuscle={'Back':[{id:1,name:'Cross-Body Lat Pull-Around',muscleGroups:['Back'],muscleWeights:[100]},{id:2,name:'Seated DB Shoulder Press',muscleGroups:['Back','Shoulders'],muscleWeights:[60,40]},{id:3,name:'Paused Barbell RDL',muscleGroups:['Back','Legs'],muscleWeights:[60,40]},{id:4,name:'Chest-Supported Machine Row',muscleGroups:['Back'],muscleWeights:[100]},{id:5,name:'Superset A1: Assisted Pull-Up',muscleGroups:['Back'],muscleWeights:[100]},{id:6,name:'Neutral-Grip Lat Pulldown',muscleGroups:['Back'],muscleWeights:[100]}],'Chest':[{id:7,name:'Low Incline Smith Machine Press',muscleGroups:['Chest'],muscleWeights:[100]},{id:8,name:'Bent-Over Cable Pec Flye',muscleGroups:['Chest'],muscleWeights:[100]}],'Legs':[{id:9,name:'Machine Hip Adduction',muscleGroups:['Legs'],muscleWeights:[100]},{id:10,name:'Leg Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:11,name:'Superset B1: Seated Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:12,name:'Superset B2: Leg Extension',muscleGroups:['Legs'],muscleWeights:[100]},{id:13,name:'Lying Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:14,name:'Hack Squat',muscleGroups:['Legs'],muscleWeights:[100]},{id:15,name:'Leg Press Calf Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:16,name:'Standing Calf Raise',muscleGroups:['Legs'],muscleWeights:[100]}],'Shoulders':[{id:17,name:'Cuffed Behind-The-Back Lateral Raise',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:18,name:'Cable Paused Shrug-In',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:19,name:'Cable Reverse Flye (Mechanical Dropset)',muscleGroups:['Shoulders'],muscleWeights:[100]}],'Triceps':[{id:20,name:'Overhead Cable Triceps Extension (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:21,name:'Superset A2: Paused Assisted Dip',muscleGroups:['Triceps'],muscleWeights:[100]},{id:22,name:'Triceps Pressdown (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:23,name:'Cable Triceps Kickback',muscleGroups:['Triceps'],muscleWeights:[100]}],'Abs':[{id:24,name:'Lying Paused Rope Face Pull',muscleGroups:['Abs'],muscleWeights:[100]},{id:25,name:'Cable Crunch',muscleGroups:['Abs'],muscleWeights:[100]},{id:26,name:'Roman Chair Leg Raise',muscleGroups:['Abs'],muscleWeights:[100]}],'Biceps':[{id:27,name:'Hammer Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:28,name:'Bayesian Cable Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:29,name:'Bottom-2/3 Constant Tension Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]}],'Custom':[{id:30,name:'Weak Point Exercise 1',muscleGroups:['Custom'],muscleWeights:[100]},{id:31,name:'Weak Point Exercise 2 (optional)',muscleGroups:['Custom'],muscleWeights:[100]}]};// Flatten the exercise library for backward compatibility\nconst exerciseLibrary=Object.values(exerciseLibraryByMuscle).flat();const days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];const[currentDay,setCurrentDay]=useState(0);const[currentWeek,setCurrentWeek]=useState(0);const[currentTab,setCurrentTab]=useState('workout');const[showExerciseLibrary,setShowExerciseLibrary]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[dayNames]=useState(days.map(day=>day));const[workoutPlans,setWorkoutPlans]=useState(Array(4).fill().map(()=>Array(3).fill().map(()=>[])));const[collapsedExercises,setCollapsedExercises]=useState({});const[showUpperLower,setShowUpperLower]=useState(false);const[libraryMode,setLibraryMode]=useState('exercises');const[collapsedMuscleGroups,setCollapsedMuscleGroups]=useState({});// Routine Builder State\nconst[rotationCycles,setRotationCycles]=useState(4);const[selectedWorkouts,setSelectedWorkouts]=useState([]);const[createdWorkouts,setCreatedWorkouts]=useState([]);const[orderedRoutineItems,setOrderedRoutineItems]=useState([]);// Workout Builder State\nconst[currentWorkout,setCurrentWorkout]=useState(null);const[isCreatingWorkout,setIsCreatingWorkout]=useState(false);const[newWorkoutName,setNewWorkoutName]=useState('');const[editingExerciseName,setEditingExerciseName]=useState(null);const[editingWorkoutName,setEditingWorkoutName]=useState(null);const[selectedExercises,setSelectedExercises]=useState([]);const[selectedCopyExercises,setSelectedCopyExercises]=useState([]);const[workoutToDelete,setWorkoutToDelete]=useState(null);const filteredExercises=exerciseLibrary.filter(exercise=>{return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());});const addExerciseDirectly=exercise=>{if(!currentWorkout)return;const newExercise={id:Date.now(),exerciseId:exercise.id,name:exercise.name,muscleGroups:exercise.muscleGroups,sets:3,repsOrTime:'reps',repsValue:10,timeValue:30,setResults:Array(3).fill().map(()=>({weight:'',reps:'10'}))};const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,newExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,newExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);};const addMultipleExercises=()=>{if(!currentWorkout||selectedExercises.length===0)return;const newExercises=selectedExercises.map(exercise=>({id:Date.now()+Math.random(),exerciseId:exercise.id,name:exercise.name,muscleGroups:exercise.muscleGroups,sets:3,repsOrTime:'reps',repsValue:10,timeValue:30,setResults:Array(3).fill().map(()=>({weight:'',reps:'10'}))}));const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,...newExercises]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,...newExercises]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);};const toggleExerciseSelection=exercise=>{setSelectedExercises(prev=>{const isSelected=prev.some(e=>e.id===exercise.id);if(isSelected){return prev.filter(e=>e.id!==exercise.id);}else{return[...prev,exercise];}});};const updateWorkoutNameInline=(workoutId,newName)=>{const updatedWorkouts=createdWorkouts.map(workout=>workout.id===workoutId?_objectSpread(_objectSpread({},workout),{},{name:newName}):workout);setCreatedWorkouts(updatedWorkouts);if((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workoutId){setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{name:newName}));}};const copyExerciseFromWorkout=exercise=>{if(!currentWorkout)return;const copiedExercise=_objectSpread(_objectSpread({},exercise),{},{id:Date.now()+Math.random(),setResults:exercise.setResults?exercise.setResults.map(set=>_objectSpread({},set)):Array(3).fill().map(()=>({weight:'',reps:'10'}))});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,copiedExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,copiedExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');};const toggleCopyExerciseSelection=exercise=>{setSelectedCopyExercises(prev=>{const isSelected=prev.some(e=>e.id===exercise.id);if(isSelected){return prev.filter(e=>e.id!==exercise.id);}else{return[...prev,exercise];}});};const addMultipleCopyExercises=()=>{if(!currentWorkout||selectedCopyExercises.length===0)return;const copiedExercises=selectedCopyExercises.map(exercise=>_objectSpread(_objectSpread({},exercise),{},{id:Date.now()+Math.random(),setResults:exercise.setResults?exercise.setResults.map(set=>_objectSpread({},set)):Array(3).fill().map(()=>({weight:'',reps:'10'}))}));const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,...copiedExercises]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,...copiedExercises]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedCopyExercises([]);};const MuscleGroupBar=_ref=>{let{muscleGroups,muscleWeights}=_ref;const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500','Upper':'bg-blue-600','Lower':'bg-green-600','Other':'bg-gray-400'};return/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\",children:muscleGroups.map((muscle,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(muscleColors[muscle]||'bg-gray-400',\" h-full\"),style:{width:\"\".concat(muscleWeights[index],\"%\")},title:\"\".concat(muscle,\": \").concat(muscleWeights[index],\"%\")},muscle))});};const getUpperLowerDistribution=exercises=>{const upperMuscles=['Chest','Triceps','Back','Biceps','Shoulders'];const lowerMuscles=['Legs'];const distribution={upper:0,lower:0,core:0};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;totalWeight+=weight;if(upperMuscles.includes(muscle)){distribution.upper+=weight;}else if(lowerMuscles.includes(muscle)){distribution.lower+=weight;}else if(muscle==='Abs'){distribution.core+=weight;}});}});if(totalWeight===0)return{upper:0,lower:0,core:0};let upperPercent=Math.round(distribution.upper/totalWeight*100);let lowerPercent=Math.round(distribution.lower/totalWeight*100);let corePercent=Math.round(distribution.core/totalWeight*100);const total=upperPercent+lowerPercent+corePercent;if(total!==100&&total>0){const diff=100-total;if(upperPercent>=lowerPercent&&upperPercent>=corePercent){upperPercent+=diff;}else if(lowerPercent>=corePercent){lowerPercent+=diff;}else{corePercent+=diff;}}return{upper:upperPercent,lower:lowerPercent,core:corePercent};};const calculateDayMuscleDistribution=exercises=>{const muscleTotal={};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;muscleTotal[muscle]=(muscleTotal[muscle]||0)+weight;totalWeight+=weight;});}});if(totalWeight===0)return{muscleGroups:[],muscleWeights:[]};const sortedMuscles=Object.entries(muscleTotal).map(_ref2=>{let[muscle,weight]=_ref2;return{muscle,weight:weight/totalWeight*100};}).sort((a,b)=>b.weight-a.weight);const top3=sortedMuscles.slice(0,3);const remaining=sortedMuscles.slice(3);const muscleGroups=top3.map(item=>item.muscle);let muscleWeights=top3.map(item=>item.weight);if(remaining.length>0){const otherWeight=remaining.reduce((sum,item)=>sum+item.weight,0);muscleGroups.push('Other');muscleWeights.push(otherWeight);}muscleWeights=muscleWeights.map(weight=>Math.round(weight));const total=muscleWeights.reduce((sum,weight)=>sum+weight,0);if(total!==100&&muscleWeights.length>0){const diff=100-total;const maxIndex=muscleWeights.indexOf(Math.max(...muscleWeights));muscleWeights[maxIndex]+=diff;}return{muscleGroups,muscleWeights};};const removeExercise=exerciseIndex=>{if(!currentWorkout)return;const updatedExercises=currentWorkout.exercises.filter((_,index)=>index!==exerciseIndex);const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const toggleExerciseCollapse=exerciseId=>{setCollapsedExercises(prev=>_objectSpread(_objectSpread({},prev),{},{[exerciseId]:!prev[exerciseId]}));};const updateExerciseSets=(exerciseIndex,change)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const newSets=Math.max(1,exercise.sets+change);const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{sets:newSets});if(newSets>exercise.setResults.length){const additionalSets=newSets-exercise.setResults.length;const targetValue=exercise.repsOrTime==='time'?exercise.timeValue:exercise.repsValue;updatedExercise.setResults=[...exercise.setResults,...Array(additionalSets).fill().map(()=>({weight:'',reps:targetValue.toString()}))];}else if(newSets<exercise.setResults.length){updatedExercise.setResults=exercise.setResults.slice(0,newSets);}const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateSetValue=(exerciseIndex,setIndex,field,value)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const updatedSetResults=[...exercise.setResults];if(!updatedSetResults[setIndex]){updatedSetResults[setIndex]={weight:'',reps:''};}updatedSetResults[setIndex][field]=value;const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{setResults:updatedSetResults});const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateExerciseName=(exerciseIndex,newName)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=_objectSpread(_objectSpread({},updatedExercises[exerciseIndex]),{},{name:newName});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};// Routine Builder Functions\nconst addWorkout=()=>{setIsCreatingWorkout(true);setNewWorkoutName('');};const createWorkout=()=>{if(!newWorkoutName.trim())return;const newWorkout={id:Date.now(),name:newWorkoutName.trim(),exercises:[]};setCreatedWorkouts(prev=>[...prev,newWorkout]);setCurrentWorkout(newWorkout);setIsCreatingWorkout(false);setNewWorkoutName('');};const cancelWorkoutCreation=()=>{setIsCreatingWorkout(false);setNewWorkoutName('');};const updateWorkoutName=(id,newName)=>{setCreatedWorkouts(prev=>prev.map(workout=>workout.id===id?_objectSpread(_objectSpread({},workout),{},{name:newName}):workout));if((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===id){setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{name:newName}));}};const selectWorkout=workout=>{setCurrentWorkout(workout);};const addNewWorkoutAndSwitch=()=>{setIsCreatingWorkout(true);setNewWorkoutName('');setCurrentTab('workout');};const deleteWorkout=workoutId=>{// Remove from created workouts\nconst updatedWorkouts=createdWorkouts.filter(workout=>workout.id!==workoutId);setCreatedWorkouts(updatedWorkouts);// Remove from selected workouts in routine\nconst updatedSelectedWorkouts=selectedWorkouts.filter(id=>id!==workoutId);setSelectedWorkouts(updatedSelectedWorkouts);// Clear current workout if it's the one being deleted\nif((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workoutId){setCurrentWorkout(null);}// Update workout plans to remove this workout\nupdateWorkoutPlans();// Close delete confirmation\nsetWorkoutToDelete(null);};const confirmDeleteWorkout=workoutId=>{setWorkoutToDelete(workoutId);};const cancelDeleteWorkout=()=>{setWorkoutToDelete(null);};const addWorkoutToRoutine=workoutId=>{if(!selectedWorkouts.includes(workoutId)){setSelectedWorkouts(prev=>[...prev,workoutId]);// Auto-add to ordered routine items\nsetOrderedRoutineItems(prev=>[...prev,{type:'workout',id:workoutId}]);updateWorkoutPlans();}};const removeWorkoutFromRoutine=workoutId=>{setSelectedWorkouts(prev=>prev.filter(id=>id!==workoutId));// Remove from ordered routine items\nsetOrderedRoutineItems(prev=>prev.filter(item=>!(item.type==='workout'&&item.id===workoutId)));updateWorkoutPlans();};const addRestDay=()=>{const restDayId=Date.now();setOrderedRoutineItems(prev=>[...prev,{type:'rest',id:restDayId,name:'Rest Day'}]);};const removeRoutineItem=itemId=>{setOrderedRoutineItems(prev=>prev.filter(item=>item.id!==itemId));};const reorderRoutineItems=(startIndex,endIndex)=>{const items=[...orderedRoutineItems];const[removed]=items.splice(startIndex,1);items.splice(endIndex,0,removed);setOrderedRoutineItems(items);};const updateWorkoutPlans=()=>{const newWorkoutPlans=Array(rotationCycles).fill().map(()=>Array(selectedWorkouts.length).fill().map(()=>[]));// Preserve existing data where possible\nworkoutPlans.forEach((week,weekIndex)=>{if(weekIndex<rotationCycles&&week){week.forEach((day,dayIndex)=>{var _newWorkoutPlans$week;if(dayIndex<selectedWorkouts.length&&(_newWorkoutPlans$week=newWorkoutPlans[weekIndex])!==null&&_newWorkoutPlans$week!==void 0&&_newWorkoutPlans$week[dayIndex]){newWorkoutPlans[weekIndex][dayIndex]=day;}});}});setWorkoutPlans(newWorkoutPlans);// Reset current selections if they're out of bounds\nif(currentDay>=selectedWorkouts.length&&selectedWorkouts.length>0)setCurrentDay(0);if(currentWeek>=rotationCycles)setCurrentWeek(0);};const RoutineBuilderView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Routine Builder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Routine Structure\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Select Workouts for Routine\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[createdWorkouts.map(workout=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 rounded-lg \".concat(selectedWorkouts.includes(workout.id)?'bg-blue-50 border border-blue-200':'bg-gray-50'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:workout.name}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2\",children:selectedWorkouts.includes(workout.id)?/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeWorkoutFromRoutine(workout.id),className:\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\",children:\"Remove from Routine\"}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>addWorkoutToRoutine(workout.id),className:\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\",children:\"Add to Routine\"})})]},workout.id)),/*#__PURE__*/_jsx(\"button\",{onClick:addNewWorkoutAndSwitch,className:\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\",children:createdWorkouts.length===0?\"+ Create Your First Workout\":\"+ Add New Workout\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Number of Cycles\"}),/*#__PURE__*/_jsx(\"select\",{value:rotationCycles,onChange:e=>{setRotationCycles(parseInt(e.target.value));updateWorkoutPlans();},className:\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:[1,2,3,4,5,6,8,10,12].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" cycle\",num>1?'s':'']},num))})]})]})]}),selectedWorkouts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Order Workouts for Routine and Add Rest Days\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addRestDay,className:\"px-3 py-1.5 bg-yellow-500 text-white text-sm rounded-lg hover:bg-yellow-600 transition-colors font-medium\",children:\"+ Add Rest Day\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-gray-50 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[orderedRoutineItems.map((item,index)=>{var _createdWorkouts$find;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative px-3 py-1.5 text-sm font-medium rounded-lg cursor-move \".concat(item.type==='workout'?'bg-blue-200 text-blue-800':'bg-yellow-200 text-yellow-800'),draggable:true,onDragStart:e=>{e.dataTransfer.setData('text/plain',index.toString());},onDragOver:e=>{e.preventDefault();},onDrop:e=>{e.preventDefault();const dragIndex=parseInt(e.dataTransfer.getData('text/plain'));const dropIndex=index;if(dragIndex!==dropIndex){reorderRoutineItems(dragIndex,dropIndex);}},children:[index+1,\". \",item.type==='workout'?(_createdWorkouts$find=createdWorkouts.find(w=>w.id===item.id))===null||_createdWorkouts$find===void 0?void 0:_createdWorkouts$find.name:item.name,/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeRoutineItem(item.id),className:\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 text-white rounded-full text-xs hover:bg-red-600 transition-colors flex items-center justify-center\",children:\"\\xD7\"})]},\"\".concat(item.type,\"-\").concat(item.id));}),orderedRoutineItems.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm\",children:\"No workouts selected yet. Add workouts above to start building your routine.\"})]})})]}),orderedRoutineItems.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Routine Preview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[Array.from({length:rotationCycles},(_,cycleIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-sm font-semibold text-blue-900 mb-3\",children:[\"Cycle \",cycleIndex+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:orderedRoutineItems.map((item,itemIndex)=>{var _createdWorkouts$find2;return/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 py-1 text-sm font-medium rounded-lg \".concat(item.type==='workout'?'bg-blue-200 text-blue-800':'bg-yellow-200 text-yellow-800'),children:[itemIndex+1,\". \",item.type==='workout'?(_createdWorkouts$find2=createdWorkouts.find(w=>w.id===item.id))===null||_createdWorkouts$find2===void 0?void 0:_createdWorkouts$find2.name:item.name]},\"cycle-\".concat(cycleIndex,\"-item-\").concat(itemIndex));})})]},cycleIndex)),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-gray-100 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-700\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium\",children:[orderedRoutineItems.length,\" days per cycle \\xD7 \",rotationCycles,\" cycle\",rotationCycles!==1?'s':'',\" = \",orderedRoutineItems.length*rotationCycles,\" total days\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-600 mt-1\",children:[\"Workouts: \",orderedRoutineItems.filter(item=>item.type==='workout').length,\" per cycle, Rest days: \",orderedRoutineItems.filter(item=>item.type==='rest').length,\" per cycle\"]})]})})]})]})]})});const WeeklySummaryView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Plan Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:rotationCycles},(_,weekIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-5\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[\"Cycle \",weekIndex+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:selectedWorkouts.length},(_,dayIndex)=>{var _workoutPlans$weekInd;const dayPlan=((_workoutPlans$weekInd=workoutPlans[weekIndex])===null||_workoutPlans$weekInd===void 0?void 0:_workoutPlans$weekInd[dayIndex])||[];const{muscleGroups,muscleWeights}=calculateDayMuscleDistribution(dayPlan);const workoutId=selectedWorkouts[dayIndex];const workout=createdWorkouts.find(w=>w.id===workoutId);const workoutName=workout?workout.name:\"Workout \".concat(dayIndex+1);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:workoutName}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[dayPlan.length,\" exercise\",dayPlan.length!==1?'s':'']})]}),muscleGroups.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:muscleGroups,muscleWeights:muscleWeights})}),dayPlan.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:dayPlan.map((exercise,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600\",children:[exercise.name,\" - \",exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]},idx))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-2 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Rest day\"})})]},dayIndex);})})]})},weekIndex))})]})});const toggleMuscleGroupCollapse=muscleGroup=>{setCollapsedMuscleGroups(prev=>_objectSpread(_objectSpread({},prev),{},{[muscleGroup]:!prev[muscleGroup]}));};const ExerciseLibraryView=()=>{const filteredExercisesByMuscle={};// Filter exercises by search term and organize by muscle group\nObject.entries(exerciseLibraryByMuscle).forEach(_ref3=>{let[muscleGroup,exercises]=_ref3;const filtered=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filtered.length>0){filteredExercisesByMuscle[muscleGroup]=filtered;}});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col pb-24 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 bg-white border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Exercise Library\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search exercises...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(filteredExercisesByMuscle).map(_ref4=>{let[muscleGroup,exercises]=_ref4;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",exercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-100 p-4 space-y-3\",children:exercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),exercise.muscleWeights&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 mb-1\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:exercise.muscleGroups,muscleWeights:exercise.muscleWeights})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addExerciseDirectly(exercise),className:\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"})})]},exercise.id))})]},muscleGroup);})})})]});};const WorkoutBuilderView=()=>{var _currentWorkout$exerc,_currentWorkout$exerc2,_currentWorkout$exerc3,_currentWorkout$exerc4,_createdWorkouts$find3;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white px-6 py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900\",children:\"Workout Builder\"}),isCreatingWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWorkoutName,onChange:e=>setNewWorkoutName(e.target.value),placeholder:\"Workout name\",className:\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true,onKeyDown:e=>{if(e.key==='Enter')createWorkout();if(e.key==='Escape')cancelWorkoutCreation();}}),/*#__PURE__*/_jsx(\"button\",{onClick:createWorkout,className:\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\",children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelWorkoutCreation,className:\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\",children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:addWorkout,className:\"px-4 py-2 bg-blue-500 text-white rounded-xl text-sm font-medium hover:bg-blue-600 transition-colors shadow-md\",children:\"+ Create New Workout\"})]}),createdWorkouts.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-2 overflow-x-auto pb-2\",children:createdWorkouts.map(workout=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-1\",children:editingWorkoutName===workout.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:workout.name,onChange:e=>updateWorkoutNameInline(workout.id,e.target.value),onBlur:()=>setEditingWorkoutName(null),onKeyDown:e=>{if(e.key==='Enter')setEditingWorkoutName(null);if(e.key==='Escape')setEditingWorkoutName(null);},className:\"px-3 py-2 border border-blue-500 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectWorkout(workout),onDoubleClick:()=>setEditingWorkoutName(workout.id),className:\"px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all \".concat((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workout.id?'bg-blue-500 text-white shadow-md':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:[workout.name,workout.exercises&&workout.exercises.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-xs opacity-75\",children:[\"(\",workout.exercises.length,\")\"]})]}),(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workout.id&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>confirmDeleteWorkout(workout.id),className:\"w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center hover:bg-red-600 transition-colors text-xs\",title:\"Delete workout\",children:\"\\xD7\"})]})},workout.id))})}),currentWorkout&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900\",children:currentWorkout.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[((_currentWorkout$exerc=currentWorkout.exercises)===null||_currentWorkout$exerc===void 0?void 0:_currentWorkout$exerc.length)||0,\" exercise\",(((_currentWorkout$exerc2=currentWorkout.exercises)===null||_currentWorkout$exerc2===void 0?void 0:_currentWorkout$exerc2.length)||0)!==1?'s':'']})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowExerciseLibrary(true),className:\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\",children:[/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Add Exercise\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24\",children:!currentWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Dumbbell,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:\"Select a workout to get started\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Choose a workout from above or create a new one\"})]}):((_currentWorkout$exerc3=currentWorkout.exercises)===null||_currentWorkout$exerc3===void 0?void 0:_currentWorkout$exerc3.length)===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Target,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:[\"No exercises in \",currentWorkout.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Use the \\\"Add Exercise\\\" button to add your first exercise\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"p-6 space-y-4\",children:(_currentWorkout$exerc4=currentWorkout.exercises)===null||_currentWorkout$exerc4===void 0?void 0:_currentWorkout$exerc4.map((exercise,exerciseIndex)=>{var _exercise$muscleGroup;const isCollapsed=collapsedExercises[exercise.id];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 text-gray-400\",children:/*#__PURE__*/_jsx(GripVertical,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleExerciseCollapse(exercise.id),className:\"p-1 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})}),/*#__PURE__*/_jsxs(\"div\",{children:[editingExerciseName===exercise.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:exercise.name,onChange:e=>updateExerciseName(exerciseIndex,e.target.value),onBlur:()=>setEditingExerciseName(null),onKeyDown:e=>{if(e.key==='Enter')setEditingExerciseName(null);if(e.key==='Escape')setEditingExerciseName(null);},className:\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\",autoFocus:true}):/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\",onClick:()=>setEditingExerciseName(exercise.id),children:exercise.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:(_exercise$muscleGroup=exercise.muscleGroups)===null||_exercise$muscleGroup===void 0?void 0:_exercise$muscleGroup.join(', ')}),isCollapsed&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-1 font-medium\",children:[exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeExercise(exerciseIndex),className:\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\",children:/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"})})]}),!isCollapsed&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-5 pb-5 border-t border-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 mb-4 underline\",children:\"Target\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:\"Sets\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,-1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Minus,{className:\"w-4 h-4 text-gray-600\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\",children:exercise.sets}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-gray-600\"})})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 px-4 pt-4\",children:Array.from({length:exercise.sets},(_,setIndex)=>{var _exercise$setResults;const setResult=((_exercise$setResults=exercise.setResults)===null||_exercise$setResults===void 0?void 0:_exercise$setResults[setIndex])||{weight:'',reps:''};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-gray-50 rounded-xl relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\",children:setIndex+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pl-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Weight\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.weight||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"lbs\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg text-gray-400\",children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Reps\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.reps||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"10\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]})]})]},setIndex);})})]})]},exercise.id);})})}),workoutToDelete&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl p-6 m-4 max-w-sm w-full shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Delete Workout\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-4\",children:[\"Are you sure you want to delete \\\"\",(_createdWorkouts$find3=createdWorkouts.find(w=>w.id===workoutToDelete))===null||_createdWorkouts$find3===void 0?void 0:_createdWorkouts$find3.name,\"\\\"? This action cannot be undone.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:cancelDeleteWorkout,className:\"flex-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteWorkout(workoutToDelete),className:\"flex-1 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\",children:\"Delete\"})]})]})})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b border-gray-100 p-6 shadow-sm\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-center text-gray-900\",children:\"Workout Tracker\"})}),currentTab==='workout'&&/*#__PURE__*/_jsx(WorkoutBuilderView,{}),currentTab==='routine'&&/*#__PURE__*/_jsx(RoutineBuilderView,{}),currentTab==='weekly'&&/*#__PURE__*/_jsx(WeeklySummaryView,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('workout'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='workout'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(Target,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Workout Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('routine'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='routine'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Routine Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('weekly'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='weekly'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Plan Overview\"})]})]}),showExerciseLibrary&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-100 flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-900\",children:libraryMode==='exercises'?'Exercise Library':'Copy from Other Workouts'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);},className:\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-gray-600\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('exercises'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='exercises'?'bg-blue-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Add New Exercises\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('copy'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='copy'?'bg-green-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Copy from Other Workouts\"})]}),libraryMode==='exercises'&&selectedExercises.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-blue-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-blue-900\",children:[selectedExercises.length,\" exercise\",selectedExercises.length!==1?'s':'',\" selected\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:addMultipleExercises,className:\"px-4 py-2 bg-blue-500 text-white text-sm rounded-lg hover:bg-blue-600 transition-colors font-medium\",children:\"Add Selected\"})]}),libraryMode==='copy'&&selectedCopyExercises.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-green-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-green-900\",children:[selectedCopyExercises.length,\" exercise\",selectedCopyExercises.length!==1?'s':'',\" selected\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:addMultipleCopyExercises,className:\"px-4 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors font-medium\",children:\"Copy Selected\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:libraryMode==='exercises'?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(exerciseLibraryByMuscle).map(_ref5=>{let[muscleGroup,exercises]=_ref5;const filteredExercises=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filteredExercises.length===0)return null;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",filteredExercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 p-4 space-y-3\",children:filteredExercises.map(exercise=>{const isSelected=selectedExercises.some(e=>e.id===exercise.id);return/*#__PURE__*/_jsx(\"div\",{onClick:()=>toggleExerciseSelection(exercise),className:\"bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors cursor-pointer border-2 \".concat(isSelected?'border-blue-500 bg-blue-50':'border-transparent'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded border-2 flex items-center justify-center transition-colors \".concat(isSelected?'bg-blue-500 border-blue-500':'border-gray-300'),children:isSelected&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-white rounded-sm\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]})]})},exercise.id);})})]},muscleGroup);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[createdWorkouts.filter(workout=>{var _workout$exercises;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises=workout.exercises)===null||_workout$exercises===void 0?void 0:_workout$exercises.length)>0;}).map(workout=>{var _workout$exercises2,_workout$exercises3;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-md font-semibold text-gray-900 mb-3\",children:[workout.name,\" (\",((_workout$exercises2=workout.exercises)===null||_workout$exercises2===void 0?void 0:_workout$exercises2.length)||0,\" exercises)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[(_workout$exercises3=workout.exercises)===null||_workout$exercises3===void 0?void 0:_workout$exercises3.map((exercise,exerciseIndex)=>{const isSelected=selectedCopyExercises.some(e=>e.id===exercise.id);return/*#__PURE__*/_jsx(\"div\",{onClick:()=>toggleCopyExerciseSelection(exercise),className:\"p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors border-2 \".concat(isSelected?'border-green-500 bg-green-50':'border-transparent'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded border-2 flex items-center justify-center transition-colors \".concat(isSelected?'bg-green-500 border-green-500':'border-gray-300'),children:isSelected&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-white rounded-sm\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[exercise.sets,\" sets \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]}),exercise.muscleGroups&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:exercise.muscleGroups.join(', ')})]})]})},exercise.id);}),(!workout.exercises||workout.exercises.length===0)&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No exercises in this workout\"})})]})]},workout.id);}),createdWorkouts.filter(workout=>{var _workout$exercises4;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises4=workout.exercises)===null||_workout$exercises4===void 0?void 0:_workout$exercises4.length)>0;}).length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-400\",children:[/*#__PURE__*/_jsx(Dumbbell,{className:\"w-12 h-12 mx-auto mb-3 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No other workouts with exercises to copy from\"})]})]})})]})})]});};export default WorkoutApp;","map":{"version":3,"names":["React","useState","Plus","Search","X","GripVertical","Trash2","ChevronDown","Target","Calendar","BarChart3","Dumbbell","Minus","RotateCcw","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WorkoutApp","exerciseLibraryByMuscle","id","name","muscleGroups","muscleWeights","exerciseLibrary","Object","values","flat","days","currentDay","setCurrentDay","currentWeek","setCurrentWeek","currentTab","setCurrentTab","showExerciseLibrary","setShowExerciseLibrary","searchTerm","setSearchTerm","dayNames","map","day","workoutPlans","setWorkoutPlans","Array","fill","collapsedExercises","setCollapsedExercises","showUpperLower","setShowUpperLower","libraryMode","setLibraryMode","collapsedMuscleGroups","setCollapsedMuscleGroups","rotationCycles","setRotationCycles","selectedWorkouts","setSelectedWorkouts","createdWorkouts","setCreatedWorkouts","orderedRoutineItems","setOrderedRoutineItems","currentWorkout","setCurrentWorkout","isCreatingWorkout","setIsCreatingWorkout","newWorkoutName","setNewWorkoutName","editingExerciseName","setEditingExerciseName","editingWorkoutName","setEditingWorkoutName","selectedExercises","setSelectedExercises","selectedCopyExercises","setSelectedCopyExercises","workoutToDelete","setWorkoutToDelete","filteredExercises","filter","exercise","toLowerCase","includes","addExerciseDirectly","newExercise","Date","now","exerciseId","sets","repsOrTime","repsValue","timeValue","setResults","weight","reps","updatedWorkouts","workout","_objectSpread","exercises","addMultipleExercises","length","newExercises","Math","random","toggleExerciseSelection","prev","isSelected","some","e","updateWorkoutNameInline","workoutId","newName","copyExerciseFromWorkout","copiedExercise","set","toggleCopyExerciseSelection","addMultipleCopyExercises","copiedExercises","MuscleGroupBar","_ref","muscleColors","className","children","muscle","index","concat","style","width","title","getUpperLowerDistribution","upperMuscles","lowerMuscles","distribution","upper","lower","core","totalWeight","forEach","upperPercent","round","lowerPercent","corePercent","total","diff","calculateDayMuscleDistribution","muscleTotal","sortedMuscles","entries","_ref2","sort","a","b","top3","slice","remaining","item","otherWeight","reduce","sum","push","maxIndex","indexOf","max","removeExercise","exerciseIndex","updatedExercises","_","toggleExerciseCollapse","updateExerciseSets","change","newSets","updatedExercise","additionalSets","targetValue","toString","updateSetValue","setIndex","field","value","updatedSetResults","updateExerciseName","addWorkout","createWorkout","trim","newWorkout","cancelWorkoutCreation","updateWorkoutName","selectWorkout","addNewWorkoutAndSwitch","deleteWorkout","updatedSelectedWorkouts","updateWorkoutPlans","confirmDeleteWorkout","cancelDeleteWorkout","addWorkoutToRoutine","type","removeWorkoutFromRoutine","addRestDay","restDayId","removeRoutineItem","itemId","reorderRoutineItems","startIndex","endIndex","items","removed","splice","newWorkoutPlans","week","weekIndex","dayIndex","_newWorkoutPlans$week","RoutineBuilderView","onClick","onChange","parseInt","target","num","_createdWorkouts$find","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","dragIndex","getData","dropIndex","find","w","from","cycleIndex","itemIndex","_createdWorkouts$find2","WeeklySummaryView","_workoutPlans$weekInd","dayPlan","workoutName","idx","toggleMuscleGroupCollapse","muscleGroup","ExerciseLibraryView","filteredExercisesByMuscle","_ref3","filtered","placeholder","_ref4","isCollapsed","join","WorkoutBuilderView","_currentWorkout$exerc","_currentWorkout$exerc2","_currentWorkout$exerc3","_currentWorkout$exerc4","_createdWorkouts$find3","autoFocus","onKeyDown","key","onBlur","onDoubleClick","_exercise$muscleGroup","_exercise$setResults","setResult","_ref5","_workout$exercises","_workout$exercises2","_workout$exercises3","_workout$exercises4"],"sources":["/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/src/workout-planner.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, Search, X, GripVertical, Trash2, ChevronDown, Target, Calendar, BarChart3, Dumbbell, Minus, RotateCcw } from 'lucide-react';\n\nconst WorkoutApp = () => {\n  const exerciseLibraryByMuscle = {\n    'Back': [\n      { id: 1, name: 'Cross-Body Lat Pull-Around', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 2, name: 'Seated DB Shoulder Press', muscleGroups: ['Back', 'Shoulders'], muscleWeights: [60, 40] },\n      { id: 3, name: 'Paused Barbell RDL', muscleGroups: ['Back', 'Legs'], muscleWeights: [60, 40] },\n      { id: 4, name: 'Chest-Supported Machine Row', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 5, name: 'Superset A1: Assisted Pull-Up', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 6, name: 'Neutral-Grip Lat Pulldown', muscleGroups: ['Back'], muscleWeights: [100] }\n    ],\n    'Chest': [\n      { id: 7, name: 'Low Incline Smith Machine Press', muscleGroups: ['Chest'], muscleWeights: [100] },\n      { id: 8, name: 'Bent-Over Cable Pec Flye', muscleGroups: ['Chest'], muscleWeights: [100] }\n    ],\n    'Legs': [\n      { id: 9, name: 'Machine Hip Adduction', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 10, name: 'Leg Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 11, name: 'Superset B1: Seated Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 12, name: 'Superset B2: Leg Extension', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 13, name: 'Lying Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 14, name: 'Hack Squat', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 15, name: 'Leg Press Calf Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 16, name: 'Standing Calf Raise', muscleGroups: ['Legs'], muscleWeights: [100] }\n    ],\n    'Shoulders': [\n      { id: 17, name: 'Cuffed Behind-The-Back Lateral Raise', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 18, name: 'Cable Paused Shrug-In', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 19, name: 'Cable Reverse Flye (Mechanical Dropset)', muscleGroups: ['Shoulders'], muscleWeights: [100] }\n    ],\n    'Triceps': [\n      { id: 20, name: 'Overhead Cable Triceps Extension (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 21, name: 'Superset A2: Paused Assisted Dip', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 22, name: 'Triceps Pressdown (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 23, name: 'Cable Triceps Kickback', muscleGroups: ['Triceps'], muscleWeights: [100] }\n    ],\n    'Abs': [\n      { id: 24, name: 'Lying Paused Rope Face Pull', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 25, name: 'Cable Crunch', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 26, name: 'Roman Chair Leg Raise', muscleGroups: ['Abs'], muscleWeights: [100] }\n    ],\n    'Biceps': [\n      { id: 27, name: 'Hammer Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 28, name: 'Bayesian Cable Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 29, name: 'Bottom-2/3 Constant Tension Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] }\n    ],\n    'Custom': [\n      { id: 30, name: 'Weak Point Exercise 1', muscleGroups: ['Custom'], muscleWeights: [100] },\n      { id: 31, name: 'Weak Point Exercise 2 (optional)', muscleGroups: ['Custom'], muscleWeights: [100] }\n    ]\n  };\n\n  // Flatten the exercise library for backward compatibility\n  const exerciseLibrary = Object.values(exerciseLibraryByMuscle).flat();\n\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const [currentDay, setCurrentDay] = useState(0);\n  const [currentWeek, setCurrentWeek] = useState(0);\n  const [currentTab, setCurrentTab] = useState('workout');\n  const [showExerciseLibrary, setShowExerciseLibrary] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dayNames] = useState(days.map(day => day));\n  const [workoutPlans, setWorkoutPlans] = useState(\n    Array(4).fill().map(() => Array(3).fill().map(() => []))\n  );\n  const [collapsedExercises, setCollapsedExercises] = useState({});\n  const [showUpperLower, setShowUpperLower] = useState(false);\n  const [libraryMode, setLibraryMode] = useState('exercises');\n  const [collapsedMuscleGroups, setCollapsedMuscleGroups] = useState({});\n  \n  // Routine Builder State\n  const [rotationCycles, setRotationCycles] = useState(4);\n  const [selectedWorkouts, setSelectedWorkouts] = useState([]);\n  const [createdWorkouts, setCreatedWorkouts] = useState([]);\n  const [orderedRoutineItems, setOrderedRoutineItems] = useState([]);\n  \n  // Workout Builder State\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [isCreatingWorkout, setIsCreatingWorkout] = useState(false);\n  const [newWorkoutName, setNewWorkoutName] = useState('');\n  const [editingExerciseName, setEditingExerciseName] = useState(null);\n  const [editingWorkoutName, setEditingWorkoutName] = useState(null);\n  const [selectedExercises, setSelectedExercises] = useState([]);\n  const [selectedCopyExercises, setSelectedCopyExercises] = useState([]);\n  const [workoutToDelete, setWorkoutToDelete] = useState(null);\n\n  const filteredExercises = exerciseLibrary.filter(exercise => {\n    return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const addExerciseDirectly = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const newExercise = {\n      id: Date.now(),\n      exerciseId: exercise.id,\n      name: exercise.name,\n      muscleGroups: exercise.muscleGroups,\n      sets: 3,\n      repsOrTime: 'reps',\n      repsValue: 10,\n      timeValue: 30,\n      setResults: Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, newExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, newExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedExercises([]);\n    setSelectedCopyExercises([]);\n  };\n\n  const addMultipleExercises = () => {\n    if (!currentWorkout || selectedExercises.length === 0) return;\n    \n    const newExercises = selectedExercises.map(exercise => ({\n      id: Date.now() + Math.random(),\n      exerciseId: exercise.id,\n      name: exercise.name,\n      muscleGroups: exercise.muscleGroups,\n      sets: 3,\n      repsOrTime: 'reps',\n      repsValue: 10,\n      timeValue: 30,\n      setResults: Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    }));\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, ...newExercises] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, ...newExercises] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedExercises([]);\n    setSelectedCopyExercises([]);\n  };\n\n  const toggleExerciseSelection = (exercise) => {\n    setSelectedExercises(prev => {\n      const isSelected = prev.some(e => e.id === exercise.id);\n      if (isSelected) {\n        return prev.filter(e => e.id !== exercise.id);\n      } else {\n        return [...prev, exercise];\n      }\n    });\n  };\n\n  const updateWorkoutNameInline = (workoutId, newName) => {\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === workoutId ? { ...workout, name: newName } : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    if (currentWorkout?.id === workoutId) {\n      setCurrentWorkout({ ...currentWorkout, name: newName });\n    }\n  };\n\n  const copyExerciseFromWorkout = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const copiedExercise = {\n      ...exercise,\n      id: Date.now() + Math.random(),\n      setResults: exercise.setResults ? exercise.setResults.map(set => ({ ...set })) : Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, copiedExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, copiedExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n  };\n\n  const toggleCopyExerciseSelection = (exercise) => {\n    setSelectedCopyExercises(prev => {\n      const isSelected = prev.some(e => e.id === exercise.id);\n      if (isSelected) {\n        return prev.filter(e => e.id !== exercise.id);\n      } else {\n        return [...prev, exercise];\n      }\n    });\n  };\n\n  const addMultipleCopyExercises = () => {\n    if (!currentWorkout || selectedCopyExercises.length === 0) return;\n    \n    const copiedExercises = selectedCopyExercises.map(exercise => ({\n      ...exercise,\n      id: Date.now() + Math.random(),\n      setResults: exercise.setResults ? exercise.setResults.map(set => ({ ...set })) : Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    }));\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, ...copiedExercises] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, ...copiedExercises] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedCopyExercises([]);\n  };\n\n  const MuscleGroupBar = ({ muscleGroups, muscleWeights }) => {\n    const muscleColors = {\n      'Chest': 'bg-red-500',\n      'Triceps': 'bg-orange-500',\n      'Shoulders': 'bg-yellow-500',\n      'Legs': 'bg-green-500',\n      'Back': 'bg-blue-500',\n      'Abs': 'bg-purple-500',\n      'Biceps': 'bg-teal-500',\n      'Custom': 'bg-pink-500',\n      'Upper': 'bg-blue-600',\n      'Lower': 'bg-green-600',\n      'Other': 'bg-gray-400'\n    };\n\n    return (\n      <div className=\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\">\n        {muscleGroups.map((muscle, index) => (\n          <div\n            key={muscle}\n            className={`${muscleColors[muscle] || 'bg-gray-400'} h-full`}\n            style={{ width: `${muscleWeights[index]}%` }}\n            title={`${muscle}: ${muscleWeights[index]}%`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const getUpperLowerDistribution = (exercises) => {\n    const upperMuscles = ['Chest', 'Triceps', 'Back', 'Biceps', 'Shoulders'];\n    const lowerMuscles = ['Legs'];\n    \n    const distribution = { upper: 0, lower: 0, core: 0 };\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          totalWeight += weight;\n          \n          if (upperMuscles.includes(muscle)) {\n            distribution.upper += weight;\n          } else if (lowerMuscles.includes(muscle)) {\n            distribution.lower += weight;\n          } else if (muscle === 'Abs') {\n            distribution.core += weight;\n          }\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { upper: 0, lower: 0, core: 0 };\n\n    let upperPercent = Math.round((distribution.upper / totalWeight) * 100);\n    let lowerPercent = Math.round((distribution.lower / totalWeight) * 100);\n    let corePercent = Math.round((distribution.core / totalWeight) * 100);\n\n    const total = upperPercent + lowerPercent + corePercent;\n    if (total !== 100 && total > 0) {\n      const diff = 100 - total;\n      if (upperPercent >= lowerPercent && upperPercent >= corePercent) {\n        upperPercent += diff;\n      } else if (lowerPercent >= corePercent) {\n        lowerPercent += diff;\n      } else {\n        corePercent += diff;\n      }\n    }\n\n    return {\n      upper: upperPercent,\n      lower: lowerPercent,\n      core: corePercent\n    };\n  };\n\n  const calculateDayMuscleDistribution = (exercises) => {\n    const muscleTotal = {};\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          muscleTotal[muscle] = (muscleTotal[muscle] || 0) + weight;\n          totalWeight += weight;\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { muscleGroups: [], muscleWeights: [] };\n\n    const sortedMuscles = Object.entries(muscleTotal)\n      .map(([muscle, weight]) => ({ \n        muscle, \n        weight: (weight / totalWeight) * 100\n      }))\n      .sort((a, b) => b.weight - a.weight);\n\n    const top3 = sortedMuscles.slice(0, 3);\n    const remaining = sortedMuscles.slice(3);\n    \n    const muscleGroups = top3.map(item => item.muscle);\n    let muscleWeights = top3.map(item => item.weight);\n    \n    if (remaining.length > 0) {\n      const otherWeight = remaining.reduce((sum, item) => sum + item.weight, 0);\n      muscleGroups.push('Other');\n      muscleWeights.push(otherWeight);\n    }\n\n    muscleWeights = muscleWeights.map(weight => Math.round(weight));\n    \n    const total = muscleWeights.reduce((sum, weight) => sum + weight, 0);\n    if (total !== 100 && muscleWeights.length > 0) {\n      const diff = 100 - total;\n      const maxIndex = muscleWeights.indexOf(Math.max(...muscleWeights));\n      muscleWeights[maxIndex] += diff;\n    }\n\n    return { muscleGroups, muscleWeights };\n  };\n\n  const removeExercise = (exerciseIndex) => {\n    if (!currentWorkout) return;\n    \n    const updatedExercises = currentWorkout.exercises.filter((_, index) => index !== exerciseIndex);\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const toggleExerciseCollapse = (exerciseId) => {\n    setCollapsedExercises(prev => ({\n      ...prev,\n      [exerciseId]: !prev[exerciseId]\n    }));\n  };\n\n  const updateExerciseSets = (exerciseIndex, change) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const newSets = Math.max(1, exercise.sets + change);\n    \n    const updatedExercise = { ...exercise, sets: newSets };\n    \n    if (newSets > exercise.setResults.length) {\n      const additionalSets = newSets - exercise.setResults.length;\n      const targetValue = exercise.repsOrTime === 'time' ? exercise.timeValue : exercise.repsValue;\n      updatedExercise.setResults = [\n        ...exercise.setResults,\n        ...Array(additionalSets).fill().map(() => ({ weight: '', reps: targetValue.toString() }))\n      ];\n    } else if (newSets < exercise.setResults.length) {\n      updatedExercise.setResults = exercise.setResults.slice(0, newSets);\n    }\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateSetValue = (exerciseIndex, setIndex, field, value) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const updatedSetResults = [...exercise.setResults];\n    \n    if (!updatedSetResults[setIndex]) {\n      updatedSetResults[setIndex] = { weight: '', reps: '' };\n    }\n    \n    updatedSetResults[setIndex][field] = value;\n    \n    const updatedExercise = { ...exercise, setResults: updatedSetResults };\n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateExerciseName = (exerciseIndex, newName) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = { ...updatedExercises[exerciseIndex], name: newName };\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  // Routine Builder Functions\n  const addWorkout = () => {\n    setIsCreatingWorkout(true);\n    setNewWorkoutName('');\n  };\n  \n  const createWorkout = () => {\n    if (!newWorkoutName.trim()) return;\n    \n    const newWorkout = {\n      id: Date.now(),\n      name: newWorkoutName.trim(),\n      exercises: []\n    };\n    setCreatedWorkouts(prev => [...prev, newWorkout]);\n    setCurrentWorkout(newWorkout);\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n  \n  const cancelWorkoutCreation = () => {\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n\n  const updateWorkoutName = (id, newName) => {\n    setCreatedWorkouts(prev => \n      prev.map(workout => \n        workout.id === id ? { ...workout, name: newName } : workout\n      )\n    );\n    if (currentWorkout?.id === id) {\n      setCurrentWorkout({ ...currentWorkout, name: newName });\n    }\n  };\n  \n  const selectWorkout = (workout) => {\n    setCurrentWorkout(workout);\n  };\n\n  const addNewWorkoutAndSwitch = () => {\n    setIsCreatingWorkout(true);\n    setNewWorkoutName('');\n    setCurrentTab('workout');\n  };\n\n  const deleteWorkout = (workoutId) => {\n    // Remove from created workouts\n    const updatedWorkouts = createdWorkouts.filter(workout => workout.id !== workoutId);\n    setCreatedWorkouts(updatedWorkouts);\n    \n    // Remove from selected workouts in routine\n    const updatedSelectedWorkouts = selectedWorkouts.filter(id => id !== workoutId);\n    setSelectedWorkouts(updatedSelectedWorkouts);\n    \n    // Clear current workout if it's the one being deleted\n    if (currentWorkout?.id === workoutId) {\n      setCurrentWorkout(null);\n    }\n    \n    // Update workout plans to remove this workout\n    updateWorkoutPlans();\n    \n    // Close delete confirmation\n    setWorkoutToDelete(null);\n  };\n\n  const confirmDeleteWorkout = (workoutId) => {\n    setWorkoutToDelete(workoutId);\n  };\n\n  const cancelDeleteWorkout = () => {\n    setWorkoutToDelete(null);\n  };\n\n  const addWorkoutToRoutine = (workoutId) => {\n    if (!selectedWorkouts.includes(workoutId)) {\n      setSelectedWorkouts(prev => [...prev, workoutId]);\n      // Auto-add to ordered routine items\n      setOrderedRoutineItems(prev => [...prev, { type: 'workout', id: workoutId }]);\n      updateWorkoutPlans();\n    }\n  };\n\n  const removeWorkoutFromRoutine = (workoutId) => {\n    setSelectedWorkouts(prev => prev.filter(id => id !== workoutId));\n    // Remove from ordered routine items\n    setOrderedRoutineItems(prev => prev.filter(item => !(item.type === 'workout' && item.id === workoutId)));\n    updateWorkoutPlans();\n  };\n\n  const addRestDay = () => {\n    const restDayId = Date.now();\n    setOrderedRoutineItems(prev => [...prev, { type: 'rest', id: restDayId, name: 'Rest Day' }]);\n  };\n\n  const removeRoutineItem = (itemId) => {\n    setOrderedRoutineItems(prev => prev.filter(item => item.id !== itemId));\n  };\n\n  const reorderRoutineItems = (startIndex, endIndex) => {\n    const items = [...orderedRoutineItems];\n    const [removed] = items.splice(startIndex, 1);\n    items.splice(endIndex, 0, removed);\n    setOrderedRoutineItems(items);\n  };\n\n  const updateWorkoutPlans = () => {\n    const newWorkoutPlans = Array(rotationCycles).fill().map(() => \n      Array(selectedWorkouts.length).fill().map(() => [])\n    );\n    \n    // Preserve existing data where possible\n    workoutPlans.forEach((week, weekIndex) => {\n      if (weekIndex < rotationCycles && week) {\n        week.forEach((day, dayIndex) => {\n          if (dayIndex < selectedWorkouts.length && newWorkoutPlans[weekIndex]?.[dayIndex]) {\n            newWorkoutPlans[weekIndex][dayIndex] = day;\n          }\n        });\n      }\n    });\n    \n    setWorkoutPlans(newWorkoutPlans);\n    \n    // Reset current selections if they're out of bounds\n    if (currentDay >= selectedWorkouts.length && selectedWorkouts.length > 0) setCurrentDay(0);\n    if (currentWeek >= rotationCycles) setCurrentWeek(0);\n  };\n\n  const RoutineBuilderView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Routine Builder</h2>\n        \n        {/* Routine Settings */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Routine Structure</h3>\n          \n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Select Workouts for Routine\n              </label>\n              <div className=\"space-y-2\">\n                {createdWorkouts.map(workout => (\n                  <div key={workout.id} className={`flex items-center justify-between p-3 rounded-lg ${\n                    selectedWorkouts.includes(workout.id) ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'\n                  }`}>\n                    <span className=\"font-medium text-gray-900\">{workout.name}</span>\n                    <div className=\"flex items-center space-x-2\">\n                      {selectedWorkouts.includes(workout.id) ? (\n                        <button\n                          onClick={() => removeWorkoutFromRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\"\n                        >\n                          Remove from Routine\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => addWorkoutToRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\"\n                        >\n                          Add to Routine\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                \n                <button\n                  onClick={addNewWorkoutAndSwitch}\n                  className=\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\"\n                >\n                  {createdWorkouts.length === 0 ? \"+ Create Your First Workout\" : \"+ Add New Workout\"}\n                </button>\n              </div>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Number of Cycles\n              </label>\n              <select\n                value={rotationCycles}\n                onChange={(e) => {\n                  setRotationCycles(parseInt(e.target.value));\n                  updateWorkoutPlans();\n                }}\n                className=\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {[1,2,3,4,5,6,8,10,12].map(num => (\n                  <option key={num} value={num}>{num} cycle{num > 1 ? 's' : ''}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Order Workouts and Add Rest Days */}\n        {selectedWorkouts.length > 0 && (\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Order Workouts for Routine and Add Rest Days</h3>\n              <button\n                onClick={addRestDay}\n                className=\"px-3 py-1.5 bg-yellow-500 text-white text-sm rounded-lg hover:bg-yellow-600 transition-colors font-medium\"\n              >\n                + Add Rest Day\n              </button>\n            </div>\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <div className=\"flex flex-wrap gap-2\">\n                {orderedRoutineItems.map((item, index) => (\n                  <div\n                    key={`${item.type}-${item.id}`}\n                    className={`relative px-3 py-1.5 text-sm font-medium rounded-lg cursor-move ${\n                      item.type === 'workout' \n                        ? 'bg-blue-200 text-blue-800' \n                        : 'bg-yellow-200 text-yellow-800'\n                    }`}\n                    draggable\n                    onDragStart={(e) => {\n                      e.dataTransfer.setData('text/plain', index.toString());\n                    }}\n                    onDragOver={(e) => {\n                      e.preventDefault();\n                    }}\n                    onDrop={(e) => {\n                      e.preventDefault();\n                      const dragIndex = parseInt(e.dataTransfer.getData('text/plain'));\n                      const dropIndex = index;\n                      if (dragIndex !== dropIndex) {\n                        reorderRoutineItems(dragIndex, dropIndex);\n                      }\n                    }}\n                  >\n                    {index + 1}. {item.type === 'workout' \n                      ? createdWorkouts.find(w => w.id === item.id)?.name \n                      : item.name}\n                    <button\n                      onClick={() => removeRoutineItem(item.id)}\n                      className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 text-white rounded-full text-xs hover:bg-red-600 transition-colors flex items-center justify-center\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                ))}\n                {orderedRoutineItems.length === 0 && (\n                  <p className=\"text-gray-500 text-sm\">No workouts selected yet. Add workouts above to start building your routine.</p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Routine Preview */}\n        {orderedRoutineItems.length > 0 && (\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Routine Preview</h3>\n            <div className=\"space-y-4\">\n              {Array.from({length: rotationCycles}, (_, cycleIndex) => (\n                <div key={cycleIndex} className=\"p-4 bg-blue-50 rounded-lg\">\n                  <h4 className=\"text-sm font-semibold text-blue-900 mb-3\">Cycle {cycleIndex + 1}</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {orderedRoutineItems.map((item, itemIndex) => (\n                      <span \n                        key={`cycle-${cycleIndex}-item-${itemIndex}`} \n                        className={`px-3 py-1 text-sm font-medium rounded-lg ${\n                          item.type === 'workout'\n                            ? 'bg-blue-200 text-blue-800'\n                            : 'bg-yellow-200 text-yellow-800'\n                        }`}\n                      >\n                        {itemIndex + 1}. {item.type === 'workout' \n                          ? createdWorkouts.find(w => w.id === item.id)?.name \n                          : item.name}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              \n              <div className=\"p-3 bg-gray-100 rounded-lg\">\n                <div className=\"text-sm text-gray-700\">\n                  <p className=\"font-medium\">\n                    {orderedRoutineItems.length} days per cycle × {rotationCycles} cycle{rotationCycles !== 1 ? 's' : ''} = {orderedRoutineItems.length * rotationCycles} total days\n                  </p>\n                  <p className=\"text-xs text-gray-600 mt-1\">\n                    Workouts: {orderedRoutineItems.filter(item => item.type === 'workout').length} per cycle, \n                    Rest days: {orderedRoutineItems.filter(item => item.type === 'rest').length} per cycle\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const WeeklySummaryView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Plan Overview</h2>\n        <div className=\"space-y-3\">\n          {Array.from({length: rotationCycles}, (_, weekIndex) => (\n            <div key={weekIndex} className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n              <div className=\"p-5\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cycle {weekIndex + 1}</h3>\n                <div className=\"space-y-3\">\n                  {Array.from({length: selectedWorkouts.length}, (_, dayIndex) => {\n                    const dayPlan = workoutPlans[weekIndex]?.[dayIndex] || [];\n                    const { muscleGroups, muscleWeights } = calculateDayMuscleDistribution(dayPlan);\n                    const workoutId = selectedWorkouts[dayIndex];\n                    const workout = createdWorkouts.find(w => w.id === workoutId);\n                    const workoutName = workout ? workout.name : `Workout ${dayIndex + 1}`;\n                    \n                    return (\n                      <div key={dayIndex} className=\"bg-gray-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-gray-700\">{workoutName}</span>\n                          <span className=\"text-xs text-gray-500\">\n                            {dayPlan.length} exercise{dayPlan.length !== 1 ? 's' : ''}\n                          </span>\n                        </div>\n                        \n                        {muscleGroups.length > 0 && (\n                          <div className=\"mb-2\">\n                            <MuscleGroupBar muscleGroups={muscleGroups} muscleWeights={muscleWeights} />\n                          </div>\n                        )}\n                        \n                        {dayPlan.length > 0 ? (\n                          <div className=\"space-y-1\">\n                            {dayPlan.map((exercise, idx) => (\n                              <div key={idx} className=\"text-xs text-gray-600\">\n                                {exercise.name} - {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <div className=\"text-center py-2 text-gray-400\">\n                            <p className=\"text-xs\">Rest day</p>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const toggleMuscleGroupCollapse = (muscleGroup) => {\n    setCollapsedMuscleGroups(prev => ({\n      ...prev,\n      [muscleGroup]: !prev[muscleGroup]\n    }));\n  };\n\n  const ExerciseLibraryView = () => {\n    const filteredExercisesByMuscle = {};\n    \n    // Filter exercises by search term and organize by muscle group\n    Object.entries(exerciseLibraryByMuscle).forEach(([muscleGroup, exercises]) => {\n      const filtered = exercises.filter(exercise => \n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      if (filtered.length > 0) {\n        filteredExercisesByMuscle[muscleGroup] = filtered;\n      }\n    });\n\n    return (\n      <div className=\"flex-1 flex flex-col pb-24 bg-gray-50\">\n        <div className=\"p-6 bg-white border-b border-gray-100\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Exercise Library</h2>\n          <div className=\"relative\">\n            <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search exercises...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"space-y-4\">\n            {Object.entries(filteredExercisesByMuscle).map(([muscleGroup, exercises]) => {\n              const isCollapsed = collapsedMuscleGroups[muscleGroup];\n              const muscleColors = {\n                'Chest': 'bg-red-500',\n                'Triceps': 'bg-orange-500',\n                'Shoulders': 'bg-yellow-500',\n                'Legs': 'bg-green-500',\n                'Back': 'bg-blue-500',\n                'Abs': 'bg-purple-500',\n                'Biceps': 'bg-teal-500',\n                'Custom': 'bg-pink-500'\n              };\n\n              return (\n                <div key={muscleGroup} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                  <button\n                    onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                    className=\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                      <span className=\"text-sm text-gray-500\">({exercises.length} exercises)</span>\n                    </div>\n                    <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                  </button>\n                  \n                  {!isCollapsed && (\n                    <div className=\"border-t border-gray-100 p-4 space-y-3\">\n                      {exercises.map(exercise => (\n                        <div\n                          key={exercise.id}\n                          className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex-1\">\n                            <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                            {exercise.muscleWeights && (\n                              <div className=\"mt-2 mb-1\">\n                                <MuscleGroupBar \n                                  muscleGroups={exercise.muscleGroups} \n                                  muscleWeights={exercise.muscleWeights} \n                                />\n                              </div>\n                            )}\n                            <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                          </div>\n                          <button\n                            onClick={() => addExerciseDirectly(exercise)}\n                            className=\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\"\n                          >\n                            <Plus className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const WorkoutBuilderView = () => {\n    return (\n      <div className=\"flex-1 flex flex-col bg-gray-50\">\n        {/* Workout Repository */}\n        <div className=\"bg-white px-6 py-4 border-b border-gray-100\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Workout Builder</h2>\n            {isCreatingWorkout ? (\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"text\"\n                  value={newWorkoutName}\n                  onChange={(e) => setNewWorkoutName(e.target.value)}\n                  placeholder=\"Workout name\"\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  autoFocus\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') createWorkout();\n                    if (e.key === 'Escape') cancelWorkoutCreation();\n                  }}\n                />\n                <button\n                  onClick={createWorkout}\n                  className=\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Create\n                </button>\n                <button\n                  onClick={cancelWorkoutCreation}\n                  className=\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={addWorkout}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-xl text-sm font-medium hover:bg-blue-600 transition-colors shadow-md\"\n              >\n                + Create New Workout\n              </button>\n            )}\n          </div>\n          \n          {/* Created Workouts */}\n          {createdWorkouts.length > 0 && (\n            <div className=\"mb-4\">\n              <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n                {createdWorkouts.map(workout => (\n                  <div key={workout.id} className=\"flex items-center space-x-1\">\n                    {editingWorkoutName === workout.id ? (\n                      <input\n                        type=\"text\"\n                        value={workout.name}\n                        onChange={(e) => updateWorkoutNameInline(workout.id, e.target.value)}\n                        onBlur={() => setEditingWorkoutName(null)}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter') setEditingWorkoutName(null);\n                          if (e.key === 'Escape') setEditingWorkoutName(null);\n                        }}\n                        className=\"px-3 py-2 border border-blue-500 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        autoFocus\n                      />\n                    ) : (\n                      <>\n                        <button\n                          onClick={() => selectWorkout(workout)}\n                          onDoubleClick={() => setEditingWorkoutName(workout.id)}\n                          className={`px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all ${\n                            currentWorkout?.id === workout.id\n                              ? 'bg-blue-500 text-white shadow-md'\n                              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                          }`}\n                        >\n                          {workout.name}\n                          {workout.exercises && workout.exercises.length > 0 && (\n                            <span className=\"ml-2 text-xs opacity-75\">({workout.exercises.length})</span>\n                          )}\n                        </button>\n                        {currentWorkout?.id === workout.id && (\n                          <button\n                            onClick={() => confirmDeleteWorkout(workout.id)}\n                            className=\"w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center hover:bg-red-600 transition-colors text-xs\"\n                            title=\"Delete workout\"\n                          >\n                            ×\n                          </button>\n                        )}\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {currentWorkout && (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-xl font-bold text-gray-900\">{currentWorkout.name}</h3>\n                <p className=\"text-sm text-gray-500\">\n                  {currentWorkout.exercises?.length || 0} exercise{(currentWorkout.exercises?.length || 0) !== 1 ? 's' : ''}\n                </p>\n              </div>\n              <button\n                onClick={() => setShowExerciseLibrary(true)}\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                <span>Add Exercise</span>\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto pb-24\">\n          {!currentWorkout ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Dumbbell className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">Select a workout to get started</p>\n              <p className=\"text-sm text-gray-500\">Choose a workout from above or create a new one</p>\n            </div>\n          ) : currentWorkout.exercises?.length === 0 ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Target className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">No exercises in {currentWorkout.name}</p>\n              <p className=\"text-sm text-gray-500\">Use the \"Add Exercise\" button to add your first exercise</p>\n            </div>\n          ) : (\n            <div className=\"p-6 space-y-4\">\n              {currentWorkout.exercises?.map((exercise, exerciseIndex) => {\n                const isCollapsed = collapsedExercises[exercise.id];\n                \n                return (\n                  <div key={exercise.id} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                    <div className=\"flex items-center justify-between p-5\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"p-1 text-gray-400\">\n                          <GripVertical className=\"w-4 h-4\" />\n                        </div>\n                        <button\n                          onClick={() => toggleExerciseCollapse(exercise.id)}\n                          className=\"p-1 hover:bg-gray-100 rounded-lg transition-colors\"\n                        >\n                          <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        <div>\n                          {editingExerciseName === exercise.id ? (\n                            <input\n                              type=\"text\"\n                              value={exercise.name}\n                              onChange={(e) => updateExerciseName(exerciseIndex, e.target.value)}\n                              onBlur={() => setEditingExerciseName(null)}\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter') setEditingExerciseName(null);\n                                if (e.key === 'Escape') setEditingExerciseName(null);\n                              }}\n                              className=\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                              autoFocus\n                            />\n                          ) : (\n                            <h3 \n                              className=\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\"\n                              onClick={() => setEditingExerciseName(exercise.id)}\n                            >\n                              {exercise.name}\n                            </h3>\n                          )}\n                          <p className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups?.join(', ')}</p>\n                          {isCollapsed && (\n                            <p className=\"text-sm text-gray-600 mt-1 font-medium\">\n                              {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removeExercise(exerciseIndex)}\n                        className=\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n\n                    {!isCollapsed && (\n                      <div className=\"px-5 pb-5 border-t border-gray-50\">\n                        <div className=\"py-4 border-b border-gray-100\">\n                          <h4 className=\"text-sm font-medium text-gray-700 mb-4 underline\">Target</h4>\n                          \n                          <div className=\"mb-4\">\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-sm font-medium text-gray-700\">Sets</span>\n                              <div className=\"flex items-center space-x-4\">\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, -1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Minus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                                <span className=\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\">{exercise.sets}</span>\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, 1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Plus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-3 px-4 pt-4\">\n                          {Array.from({ length: exercise.sets }, (_, setIndex) => {\n                            const setResult = exercise.setResults?.[setIndex] || { weight: '', reps: '' };\n                            \n                            return (\n                              <div key={setIndex} className=\"p-3 bg-gray-50 rounded-xl relative\">\n                                <div className=\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\">\n                                  {setIndex + 1}\n                                </div>\n                                <div className=\"flex items-center justify-between pl-4\">\n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Weight</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.weight || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'weight', e.target.value)}\n                                      placeholder=\"lbs\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                  \n                                  <span className=\"text-lg text-gray-400\">×</span>\n                                  \n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Reps</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.reps || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'reps', e.target.value)}\n                                      placeholder=\"10\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Delete Confirmation Modal */}\n        {workoutToDelete && (\n          <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-center justify-center\">\n            <div className=\"bg-white rounded-xl p-6 m-4 max-w-sm w-full shadow-2xl\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Delete Workout</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Are you sure you want to delete \"{createdWorkouts.find(w => w.id === workoutToDelete)?.name}\"? This action cannot be undone.\n              </p>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={cancelDeleteWorkout}\n                  className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => deleteWorkout(workoutToDelete)}\n                  className=\"flex-1 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\">\n      <div className=\"bg-white border-b border-gray-100 p-6 shadow-sm\">\n        <h1 className=\"text-2xl font-bold text-center text-gray-900\">Workout Tracker</h1>\n      </div>\n\n      {currentTab === 'workout' && <WorkoutBuilderView />}\n      {currentTab === 'routine' && <RoutineBuilderView />}\n      {currentTab === 'weekly' && <WeeklySummaryView />}\n\n      <div className=\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\">\n        <button\n          onClick={() => setCurrentTab('workout')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'workout' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <Target className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Workout Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('routine')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'routine' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <RotateCcw className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Routine Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('weekly')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'weekly' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <BarChart3 className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Plan Overview</span>\n        </button>\n      </div>\n\n      {showExerciseLibrary && (\n        <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\">\n          <div className=\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\">\n            <div className=\"p-6 border-b border-gray-100 flex items-center justify-between\">\n              <h2 className=\"text-xl font-bold text-gray-900\">\n                {libraryMode === 'exercises' ? 'Exercise Library' : 'Copy from Other Workouts'}\n              </h2>\n              <button\n                onClick={() => {\n                  setShowExerciseLibrary(false);\n                  setLibraryMode('exercises');\n                  setSelectedExercises([]);\n                  setSelectedCopyExercises([]);\n                }}\n                className=\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\"\n              >\n                <X className=\"w-4 h-4 text-gray-600\" />\n              </button>\n            </div>\n\n            <div className=\"p-4 border-b border-gray-100\">\n              <div className=\"flex space-x-2 mb-3\">\n                <button\n                  onClick={() => setLibraryMode('exercises')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'exercises'\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Add New Exercises\n                </button>\n                <button\n                  onClick={() => setLibraryMode('copy')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'copy'\n                      ? 'bg-green-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Copy from Other Workouts\n                </button>\n              </div>\n              \n              {libraryMode === 'exercises' && selectedExercises.length > 0 && (\n                <div className=\"flex items-center justify-between bg-blue-50 p-3 rounded-lg\">\n                  <span className=\"text-sm font-medium text-blue-900\">\n                    {selectedExercises.length} exercise{selectedExercises.length !== 1 ? 's' : ''} selected\n                  </span>\n                  <button\n                    onClick={addMultipleExercises}\n                    className=\"px-4 py-2 bg-blue-500 text-white text-sm rounded-lg hover:bg-blue-600 transition-colors font-medium\"\n                  >\n                    Add Selected\n                  </button>\n                </div>\n              )}\n              \n              {libraryMode === 'copy' && selectedCopyExercises.length > 0 && (\n                <div className=\"flex items-center justify-between bg-green-50 p-3 rounded-lg\">\n                  <span className=\"text-sm font-medium text-green-900\">\n                    {selectedCopyExercises.length} exercise{selectedCopyExercises.length !== 1 ? 's' : ''} selected\n                  </span>\n                  <button\n                    onClick={addMultipleCopyExercises}\n                    className=\"px-4 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors font-medium\"\n                  >\n                    Copy Selected\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-6\">\n              {libraryMode === 'exercises' ? (\n                <div className=\"space-y-4\">\n                  {Object.entries(exerciseLibraryByMuscle).map(([muscleGroup, exercises]) => {\n                    const filteredExercises = exercises.filter(exercise => \n                      exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    \n                    if (filteredExercises.length === 0) return null;\n                    \n                    const isCollapsed = collapsedMuscleGroups[muscleGroup];\n                    const muscleColors = {\n                      'Chest': 'bg-red-500',\n                      'Triceps': 'bg-orange-500',\n                      'Shoulders': 'bg-yellow-500',\n                      'Legs': 'bg-green-500',\n                      'Back': 'bg-blue-500',\n                      'Abs': 'bg-purple-500',\n                      'Biceps': 'bg-teal-500',\n                      'Custom': 'bg-pink-500'\n                    };\n\n                    return (\n                      <div key={muscleGroup} className=\"bg-gray-50 rounded-xl overflow-hidden\">\n                        <button\n                          onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                          className=\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                            <span className=\"text-sm text-gray-500\">({filteredExercises.length} exercises)</span>\n                          </div>\n                          <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        \n                        {!isCollapsed && (\n                          <div className=\"border-t border-gray-200 p-4 space-y-3\">\n                            {filteredExercises.map(exercise => {\n                              const isSelected = selectedExercises.some(e => e.id === exercise.id);\n                              return (\n                                <div\n                                  key={exercise.id}\n                                  onClick={() => toggleExerciseSelection(exercise)}\n                                  className={`bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors cursor-pointer border-2 ${\n                                    isSelected ? 'border-blue-500 bg-blue-50' : 'border-transparent'\n                                  }`}\n                                >\n                                  <div className=\"flex items-center space-x-3 flex-1\">\n                                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-colors ${\n                                      isSelected ? 'bg-blue-500 border-blue-500' : 'border-gray-300'\n                                    }`}>\n                                      {isSelected && <div className=\"w-2 h-2 bg-white rounded-sm\"></div>}\n                                    </div>\n                                    <div className=\"flex-1\">\n                                      <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                                      <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                                    </div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {createdWorkouts\n                    .filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0)\n                    .map(workout => (\n                    <div key={workout.id} className=\"bg-gray-50 rounded-xl p-4\">\n                      <h3 className=\"text-md font-semibold text-gray-900 mb-3\">\n                        {workout.name} ({workout.exercises?.length || 0} exercises)\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {workout.exercises?.map((exercise, exerciseIndex) => {\n                          const isSelected = selectedCopyExercises.some(e => e.id === exercise.id);\n                          return (\n                            <div\n                              key={exercise.id}\n                              onClick={() => toggleCopyExerciseSelection(exercise)}\n                              className={`p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors border-2 ${\n                                isSelected ? 'border-green-500 bg-green-50' : 'border-transparent'\n                              }`}\n                            >\n                              <div className=\"flex items-center space-x-3 flex-1\">\n                                <div className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-colors ${\n                                  isSelected ? 'bg-green-500 border-green-500' : 'border-gray-300'\n                                }`}>\n                                  {isSelected && <div className=\"w-2 h-2 bg-white rounded-sm\"></div>}\n                                </div>\n                                <div className=\"flex-1\">\n                                  <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                                  <div className=\"text-xs text-gray-500 mt-1\">\n                                    {exercise.sets} sets × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                                  </div>\n                                  {exercise.muscleGroups && (\n                                    <div className=\"text-xs text-gray-400 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                        {(!workout.exercises || workout.exercises.length === 0) && (\n                          <div className=\"text-center py-4 text-gray-400\">\n                            <p className=\"text-sm\">No exercises in this workout</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  {createdWorkouts.filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0).length === 0 && (\n                    <div className=\"text-center py-8 text-gray-400\">\n                      <Dumbbell className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                      <p className=\"text-sm\">No other workouts with exercises to copy from</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkoutApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}