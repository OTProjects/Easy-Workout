{"ast":null,"code":"import _objectSpread from\"/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Plus,Search,X,GripVertical,Trash2,ChevronDown,Target,Calendar,BarChart3,Dumbbell,Minus,RotateCcw}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorkoutApp=()=>{const exerciseLibraryByMuscle={'Back':[{id:1,name:'Cross-Body Lat Pull-Around',muscleGroups:['Back'],muscleWeights:[100]},{id:2,name:'Seated DB Shoulder Press',muscleGroups:['Back','Shoulders'],muscleWeights:[60,40]},{id:3,name:'Paused Barbell RDL',muscleGroups:['Back','Legs'],muscleWeights:[60,40]},{id:4,name:'Chest-Supported Machine Row',muscleGroups:['Back'],muscleWeights:[100]},{id:5,name:'Superset A1: Assisted Pull-Up',muscleGroups:['Back'],muscleWeights:[100]},{id:6,name:'Neutral-Grip Lat Pulldown',muscleGroups:['Back'],muscleWeights:[100]}],'Chest':[{id:7,name:'Low Incline Smith Machine Press',muscleGroups:['Chest'],muscleWeights:[100]},{id:8,name:'Bent-Over Cable Pec Flye',muscleGroups:['Chest'],muscleWeights:[100]}],'Legs':[{id:9,name:'Machine Hip Adduction',muscleGroups:['Legs'],muscleWeights:[100]},{id:10,name:'Leg Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:11,name:'Superset B1: Seated Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:12,name:'Superset B2: Leg Extension',muscleGroups:['Legs'],muscleWeights:[100]},{id:13,name:'Lying Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:14,name:'Hack Squat',muscleGroups:['Legs'],muscleWeights:[100]},{id:15,name:'Leg Press Calf Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:16,name:'Standing Calf Raise',muscleGroups:['Legs'],muscleWeights:[100]}],'Shoulders':[{id:17,name:'Cuffed Behind-The-Back Lateral Raise',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:18,name:'Cable Paused Shrug-In',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:19,name:'Cable Reverse Flye (Mechanical Dropset)',muscleGroups:['Shoulders'],muscleWeights:[100]}],'Triceps':[{id:20,name:'Overhead Cable Triceps Extension (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:21,name:'Superset A2: Paused Assisted Dip',muscleGroups:['Triceps'],muscleWeights:[100]},{id:22,name:'Triceps Pressdown (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:23,name:'Cable Triceps Kickback',muscleGroups:['Triceps'],muscleWeights:[100]}],'Abs':[{id:24,name:'Lying Paused Rope Face Pull',muscleGroups:['Abs'],muscleWeights:[100]},{id:25,name:'Cable Crunch',muscleGroups:['Abs'],muscleWeights:[100]},{id:26,name:'Roman Chair Leg Raise',muscleGroups:['Abs'],muscleWeights:[100]}],'Biceps':[{id:27,name:'Hammer Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:28,name:'Bayesian Cable Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:29,name:'Bottom-2/3 Constant Tension Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]}],'Custom':[{id:30,name:'Weak Point Exercise 1',muscleGroups:['Custom'],muscleWeights:[100]},{id:31,name:'Weak Point Exercise 2 (optional)',muscleGroups:['Custom'],muscleWeights:[100]}]};// Flatten the exercise library for backward compatibility\nconst exerciseLibrary=Object.values(exerciseLibraryByMuscle).flat();const days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];const[currentDay,setCurrentDay]=useState(0);const[currentWeek,setCurrentWeek]=useState(0);const[currentTab,setCurrentTab]=useState('workout');const[showExerciseLibrary,setShowExerciseLibrary]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[dayNames]=useState(days.map(day=>day));const[workoutPlans,setWorkoutPlans]=useState(Array(4).fill().map(()=>Array(3).fill().map(()=>[])));const[collapsedExercises,setCollapsedExercises]=useState({});const[showUpperLower,setShowUpperLower]=useState(false);const[libraryMode,setLibraryMode]=useState('exercises');const[collapsedMuscleGroups,setCollapsedMuscleGroups]=useState({});// Routine Builder State\nconst[rotationCycles,setRotationCycles]=useState(4);const[selectedWorkouts,setSelectedWorkouts]=useState([1,2,3]);const[createdWorkouts,setCreatedWorkouts]=useState([{id:1,name:'Push',exercises:[]},{id:2,name:'Pull',exercises:[]},{id:3,name:'Legs',exercises:[]},{id:4,name:'Upper',exercises:[]},{id:5,name:'Lower',exercises:[]}]);// Workout Builder State\nconst[currentWorkout,setCurrentWorkout]=useState(null);const[isCreatingWorkout,setIsCreatingWorkout]=useState(false);const[newWorkoutName,setNewWorkoutName]=useState('');const[editingExerciseName,setEditingExerciseName]=useState(null);const filteredExercises=exerciseLibrary.filter(exercise=>{return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());});const addExerciseDirectly=exercise=>{if(!currentWorkout)return;const newExercise={id:Date.now(),exerciseId:exercise.id,name:exercise.name,muscleGroups:exercise.muscleGroups,sets:3,repsOrTime:'reps',repsValue:10,timeValue:30,setResults:Array(3).fill().map(()=>({weight:'',reps:'10'}))};const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,newExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,newExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');};const copyExerciseFromWorkout=exercise=>{if(!currentWorkout)return;const copiedExercise=_objectSpread(_objectSpread({},exercise),{},{id:Date.now()+Math.random(),setResults:exercise.setResults?exercise.setResults.map(set=>_objectSpread({},set)):Array(3).fill().map(()=>({weight:'',reps:'10'}))});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,copiedExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,copiedExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');};const MuscleGroupBar=_ref=>{let{muscleGroups,muscleWeights}=_ref;const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500','Upper':'bg-blue-600','Lower':'bg-green-600','Other':'bg-gray-400'};return/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\",children:muscleGroups.map((muscle,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(muscleColors[muscle]||'bg-gray-400',\" h-full\"),style:{width:\"\".concat(muscleWeights[index],\"%\")},title:\"\".concat(muscle,\": \").concat(muscleWeights[index],\"%\")},muscle))});};const getUpperLowerDistribution=exercises=>{const upperMuscles=['Chest','Triceps','Back','Biceps','Shoulders'];const lowerMuscles=['Legs'];const distribution={upper:0,lower:0,core:0};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;totalWeight+=weight;if(upperMuscles.includes(muscle)){distribution.upper+=weight;}else if(lowerMuscles.includes(muscle)){distribution.lower+=weight;}else if(muscle==='Abs'){distribution.core+=weight;}});}});if(totalWeight===0)return{upper:0,lower:0,core:0};let upperPercent=Math.round(distribution.upper/totalWeight*100);let lowerPercent=Math.round(distribution.lower/totalWeight*100);let corePercent=Math.round(distribution.core/totalWeight*100);const total=upperPercent+lowerPercent+corePercent;if(total!==100&&total>0){const diff=100-total;if(upperPercent>=lowerPercent&&upperPercent>=corePercent){upperPercent+=diff;}else if(lowerPercent>=corePercent){lowerPercent+=diff;}else{corePercent+=diff;}}return{upper:upperPercent,lower:lowerPercent,core:corePercent};};const calculateDayMuscleDistribution=exercises=>{const muscleTotal={};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;muscleTotal[muscle]=(muscleTotal[muscle]||0)+weight;totalWeight+=weight;});}});if(totalWeight===0)return{muscleGroups:[],muscleWeights:[]};const sortedMuscles=Object.entries(muscleTotal).map(_ref2=>{let[muscle,weight]=_ref2;return{muscle,weight:weight/totalWeight*100};}).sort((a,b)=>b.weight-a.weight);const top3=sortedMuscles.slice(0,3);const remaining=sortedMuscles.slice(3);const muscleGroups=top3.map(item=>item.muscle);let muscleWeights=top3.map(item=>item.weight);if(remaining.length>0){const otherWeight=remaining.reduce((sum,item)=>sum+item.weight,0);muscleGroups.push('Other');muscleWeights.push(otherWeight);}muscleWeights=muscleWeights.map(weight=>Math.round(weight));const total=muscleWeights.reduce((sum,weight)=>sum+weight,0);if(total!==100&&muscleWeights.length>0){const diff=100-total;const maxIndex=muscleWeights.indexOf(Math.max(...muscleWeights));muscleWeights[maxIndex]+=diff;}return{muscleGroups,muscleWeights};};const removeExercise=exerciseIndex=>{if(!currentWorkout)return;const updatedExercises=currentWorkout.exercises.filter((_,index)=>index!==exerciseIndex);const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const toggleExerciseCollapse=exerciseId=>{setCollapsedExercises(prev=>_objectSpread(_objectSpread({},prev),{},{[exerciseId]:!prev[exerciseId]}));};const updateExerciseSets=(exerciseIndex,change)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const newSets=Math.max(1,exercise.sets+change);const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{sets:newSets});if(newSets>exercise.setResults.length){const additionalSets=newSets-exercise.setResults.length;const targetValue=exercise.repsOrTime==='time'?exercise.timeValue:exercise.repsValue;updatedExercise.setResults=[...exercise.setResults,...Array(additionalSets).fill().map(()=>({weight:'',reps:targetValue.toString()}))];}else if(newSets<exercise.setResults.length){updatedExercise.setResults=exercise.setResults.slice(0,newSets);}const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateSetValue=(exerciseIndex,setIndex,field,value)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const updatedSetResults=[...exercise.setResults];if(!updatedSetResults[setIndex]){updatedSetResults[setIndex]={weight:'',reps:''};}updatedSetResults[setIndex][field]=value;const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{setResults:updatedSetResults});const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateExerciseName=(exerciseIndex,newName)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=_objectSpread(_objectSpread({},updatedExercises[exerciseIndex]),{},{name:newName});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};// Routine Builder Functions\nconst addWorkout=()=>{setIsCreatingWorkout(true);setNewWorkoutName('');};const createWorkout=()=>{if(!newWorkoutName.trim())return;const newWorkout={id:Date.now(),name:newWorkoutName.trim(),exercises:[]};setCreatedWorkouts(prev=>[...prev,newWorkout]);setCurrentWorkout(newWorkout);setIsCreatingWorkout(false);setNewWorkoutName('');};const cancelWorkoutCreation=()=>{setIsCreatingWorkout(false);setNewWorkoutName('');};const updateWorkoutName=(id,newName)=>{setCreatedWorkouts(prev=>prev.map(workout=>workout.id===id?_objectSpread(_objectSpread({},workout),{},{name:newName}):workout));if((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===id){setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{name:newName}));}};const selectWorkout=workout=>{setCurrentWorkout(workout);};const addWorkoutToRoutine=workoutId=>{if(!selectedWorkouts.includes(workoutId)){setSelectedWorkouts(prev=>[...prev,workoutId]);updateWorkoutPlans();}};const removeWorkoutFromRoutine=workoutId=>{setSelectedWorkouts(prev=>prev.filter(id=>id!==workoutId));updateWorkoutPlans();};const updateWorkoutPlans=()=>{const newWorkoutPlans=Array(rotationCycles).fill().map(()=>Array(selectedWorkouts.length).fill().map(()=>[]));// Preserve existing data where possible\nworkoutPlans.forEach((week,weekIndex)=>{if(weekIndex<rotationCycles&&week){week.forEach((day,dayIndex)=>{var _newWorkoutPlans$week;if(dayIndex<selectedWorkouts.length&&(_newWorkoutPlans$week=newWorkoutPlans[weekIndex])!==null&&_newWorkoutPlans$week!==void 0&&_newWorkoutPlans$week[dayIndex]){newWorkoutPlans[weekIndex][dayIndex]=day;}});}});setWorkoutPlans(newWorkoutPlans);// Reset current selections if they're out of bounds\nif(currentDay>=selectedWorkouts.length&&selectedWorkouts.length>0)setCurrentDay(0);if(currentWeek>=rotationCycles)setCurrentWeek(0);};const RoutineBuilderView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Routine Builder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Routine Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Select Workouts for Routine\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[createdWorkouts.map(workout=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:workout.name}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2\",children:selectedWorkouts.includes(workout.id)?/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeWorkoutFromRoutine(workout.id),className:\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\",children:\"Remove\"}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>addWorkoutToRoutine(workout.id),className:\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\",children:\"Add to Routine\"})})]},workout.id)),/*#__PURE__*/_jsx(\"button\",{onClick:addWorkout,className:\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\",children:\"+ Create New Workout\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Number of Cycles\"}),/*#__PURE__*/_jsx(\"select\",{value:rotationCycles,onChange:e=>{setRotationCycles(parseInt(e.target.value));updateWorkoutPlans();},className:\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:[1,2,3,4,5,6,8,10,12].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" cycle\",num>1?'s':'']},num))})]})]}),selectedWorkouts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-900 mb-2\",children:\"Current Routine:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedWorkouts.map((workoutId,index)=>{const workout=createdWorkouts.find(w=>w.id===workoutId);return/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\",children:[index+1,\". \",workout===null||workout===void 0?void 0:workout.name]},workoutId);})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-700 mt-2\",children:[selectedWorkouts.length,\" workouts \\xD7 \",rotationCycles,\" cycles = \",selectedWorkouts.length*rotationCycles,\" total workout days\"]})]})]})]})});const WeeklySummaryView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Plan Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:rotationCycles},(_,weekIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-5\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[\"Cycle \",weekIndex+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:selectedWorkouts.length},(_,dayIndex)=>{var _workoutPlans$weekInd;const dayPlan=((_workoutPlans$weekInd=workoutPlans[weekIndex])===null||_workoutPlans$weekInd===void 0?void 0:_workoutPlans$weekInd[dayIndex])||[];const{muscleGroups,muscleWeights}=calculateDayMuscleDistribution(dayPlan);const workoutId=selectedWorkouts[dayIndex];const workout=createdWorkouts.find(w=>w.id===workoutId);const workoutName=workout?workout.name:\"Workout \".concat(dayIndex+1);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:workoutName}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[dayPlan.length,\" exercise\",dayPlan.length!==1?'s':'']})]}),muscleGroups.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:muscleGroups,muscleWeights:muscleWeights})}),dayPlan.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:dayPlan.map((exercise,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600\",children:[exercise.name,\" - \",exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]},idx))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-2 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Rest day\"})})]},dayIndex);})})]})},weekIndex))})]})});const toggleMuscleGroupCollapse=muscleGroup=>{setCollapsedMuscleGroups(prev=>_objectSpread(_objectSpread({},prev),{},{[muscleGroup]:!prev[muscleGroup]}));};const ExerciseLibraryView=()=>{const filteredExercisesByMuscle={};// Filter exercises by search term and organize by muscle group\nObject.entries(exerciseLibraryByMuscle).forEach(_ref3=>{let[muscleGroup,exercises]=_ref3;const filtered=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filtered.length>0){filteredExercisesByMuscle[muscleGroup]=filtered;}});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col pb-24 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 bg-white border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Exercise Library\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search exercises...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(filteredExercisesByMuscle).map(_ref4=>{let[muscleGroup,exercises]=_ref4;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",exercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-100 p-4 space-y-3\",children:exercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),exercise.muscleWeights&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 mb-1\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:exercise.muscleGroups,muscleWeights:exercise.muscleWeights})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addExerciseDirectly(exercise),className:\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"})})]},exercise.id))})]},muscleGroup);})})})]});};const WorkoutBuilderView=()=>{var _currentWorkout$exerc,_currentWorkout$exerc2,_currentWorkout$exerc3,_currentWorkout$exerc4;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white px-6 py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-4\",children:\"Workout Builder\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 overflow-x-auto pb-2\",children:[createdWorkouts.map(workout=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectWorkout(workout),className:\"px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all \".concat((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workout.id?'bg-blue-500 text-white shadow-md':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:[workout.name,workout.exercises&&workout.exercises.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-xs opacity-75\",children:[\"(\",workout.exercises.length,\")\"]})]},workout.id)),isCreatingWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWorkoutName,onChange:e=>setNewWorkoutName(e.target.value),placeholder:\"Workout name\",className:\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true,onKeyDown:e=>{if(e.key==='Enter')createWorkout();if(e.key==='Escape')cancelWorkoutCreation();}}),/*#__PURE__*/_jsx(\"button\",{onClick:createWorkout,className:\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\",children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelWorkoutCreation,className:\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\",children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:addWorkout,className:\"px-4 py-2 border-2 border-dashed border-gray-300 rounded-xl text-sm text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors whitespace-nowrap\",children:\"+ Create New Workout\"})]})}),currentWorkout&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900\",children:currentWorkout.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[((_currentWorkout$exerc=currentWorkout.exercises)===null||_currentWorkout$exerc===void 0?void 0:_currentWorkout$exerc.length)||0,\" exercise\",(((_currentWorkout$exerc2=currentWorkout.exercises)===null||_currentWorkout$exerc2===void 0?void 0:_currentWorkout$exerc2.length)||0)!==1?'s':'']})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowExerciseLibrary(true),className:\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\",children:[/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Add Exercise\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24\",children:!currentWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Dumbbell,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:\"Select a workout to get started\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Choose a workout from above or create a new one\"})]}):((_currentWorkout$exerc3=currentWorkout.exercises)===null||_currentWorkout$exerc3===void 0?void 0:_currentWorkout$exerc3.length)===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Target,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:[\"No exercises in \",currentWorkout.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Use the \\\"Add Exercise\\\" button to add your first exercise\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"p-6 space-y-4\",children:(_currentWorkout$exerc4=currentWorkout.exercises)===null||_currentWorkout$exerc4===void 0?void 0:_currentWorkout$exerc4.map((exercise,exerciseIndex)=>{var _exercise$muscleGroup;const isCollapsed=collapsedExercises[exercise.id];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 text-gray-400\",children:/*#__PURE__*/_jsx(GripVertical,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleExerciseCollapse(exercise.id),className:\"p-1 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})}),/*#__PURE__*/_jsxs(\"div\",{children:[editingExerciseName===exercise.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:exercise.name,onChange:e=>updateExerciseName(exerciseIndex,e.target.value),onBlur:()=>setEditingExerciseName(null),onKeyDown:e=>{if(e.key==='Enter')setEditingExerciseName(null);if(e.key==='Escape')setEditingExerciseName(null);},className:\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\",autoFocus:true}):/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\",onClick:()=>setEditingExerciseName(exercise.id),children:exercise.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:(_exercise$muscleGroup=exercise.muscleGroups)===null||_exercise$muscleGroup===void 0?void 0:_exercise$muscleGroup.join(', ')}),isCollapsed&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-1 font-medium\",children:[exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeExercise(exerciseIndex),className:\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\",children:/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"})})]}),!isCollapsed&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-5 pb-5 border-t border-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 mb-4 underline\",children:\"Target\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:\"Sets\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,-1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Minus,{className:\"w-4 h-4 text-gray-600\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\",children:exercise.sets}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-gray-600\"})})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 px-4 pt-4\",children:Array.from({length:exercise.sets},(_,setIndex)=>{var _exercise$setResults;const setResult=((_exercise$setResults=exercise.setResults)===null||_exercise$setResults===void 0?void 0:_exercise$setResults[setIndex])||{weight:'',reps:''};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-gray-50 rounded-xl relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\",children:setIndex+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pl-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Weight\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.weight||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"lbs\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg text-gray-400\",children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Reps\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.reps||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"10\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]})]})]},setIndex);})})]})]},exercise.id);})})})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b border-gray-100 p-6 shadow-sm\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-center text-gray-900\",children:\"Workout Tracker\"})}),currentTab==='workout'&&/*#__PURE__*/_jsx(WorkoutBuilderView,{}),currentTab==='routine'&&/*#__PURE__*/_jsx(RoutineBuilderView,{}),currentTab==='weekly'&&/*#__PURE__*/_jsx(WeeklySummaryView,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('workout'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='workout'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(Target,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Workout Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('routine'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='routine'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Routine Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('weekly'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='weekly'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Plan Overview\"})]})]}),showExerciseLibrary&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-100 flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-900\",children:libraryMode==='exercises'?'Exercise Library':'Copy from Other Workouts'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowExerciseLibrary(false);setLibraryMode('exercises');},className:\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-gray-600\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('exercises'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='exercises'?'bg-blue-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Add New Exercises\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('copy'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='copy'?'bg-green-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Copy from Other Workouts\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:libraryMode==='exercises'?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(exerciseLibraryByMuscle).map(_ref5=>{let[muscleGroup,exercises]=_ref5;const filteredExercises=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filteredExercises.length===0)return null;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",filteredExercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 p-4 space-y-3\",children:filteredExercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),exercise.muscleWeights&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 mb-1\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:exercise.muscleGroups,muscleWeights:exercise.muscleWeights})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addExerciseDirectly(exercise),className:\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"})})]},exercise.id))})]},muscleGroup);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[createdWorkouts.filter(workout=>{var _workout$exercises;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises=workout.exercises)===null||_workout$exercises===void 0?void 0:_workout$exercises.length)>0;}).map(workout=>{var _workout$exercises2,_workout$exercises3;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-md font-semibold text-gray-900 mb-3\",children:[workout.name,\" (\",((_workout$exercises2=workout.exercises)===null||_workout$exercises2===void 0?void 0:_workout$exercises2.length)||0,\" exercises)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[(_workout$exercises3=workout.exercises)===null||_workout$exercises3===void 0?void 0:_workout$exercises3.map((exercise,exerciseIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors\",onClick:()=>copyExerciseFromWorkout(exercise),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[exercise.sets,\" sets \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]}),exercise.muscleGroups&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:exercise.muscleGroups.join(', ')})]}),/*#__PURE__*/_jsx(\"button\",{className:\"w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center hover:bg-green-600 transition-colors\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"})})]},exercise.id)),(!workout.exercises||workout.exercises.length===0)&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No exercises in this workout\"})})]})]},workout.id);}),createdWorkouts.filter(workout=>{var _workout$exercises4;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises4=workout.exercises)===null||_workout$exercises4===void 0?void 0:_workout$exercises4.length)>0;}).length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-400\",children:[/*#__PURE__*/_jsx(Dumbbell,{className:\"w-12 h-12 mx-auto mb-3 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No other workouts with exercises to copy from\"})]})]})})]})})]});};export default WorkoutApp;","map":{"version":3,"names":["React","useState","Plus","Search","X","GripVertical","Trash2","ChevronDown","Target","Calendar","BarChart3","Dumbbell","Minus","RotateCcw","jsx","_jsx","jsxs","_jsxs","WorkoutApp","exerciseLibraryByMuscle","id","name","muscleGroups","muscleWeights","exerciseLibrary","Object","values","flat","days","currentDay","setCurrentDay","currentWeek","setCurrentWeek","currentTab","setCurrentTab","showExerciseLibrary","setShowExerciseLibrary","searchTerm","setSearchTerm","dayNames","map","day","workoutPlans","setWorkoutPlans","Array","fill","collapsedExercises","setCollapsedExercises","showUpperLower","setShowUpperLower","libraryMode","setLibraryMode","collapsedMuscleGroups","setCollapsedMuscleGroups","rotationCycles","setRotationCycles","selectedWorkouts","setSelectedWorkouts","createdWorkouts","setCreatedWorkouts","exercises","currentWorkout","setCurrentWorkout","isCreatingWorkout","setIsCreatingWorkout","newWorkoutName","setNewWorkoutName","editingExerciseName","setEditingExerciseName","filteredExercises","filter","exercise","toLowerCase","includes","addExerciseDirectly","newExercise","Date","now","exerciseId","sets","repsOrTime","repsValue","timeValue","setResults","weight","reps","updatedWorkouts","workout","_objectSpread","copyExerciseFromWorkout","copiedExercise","Math","random","set","MuscleGroupBar","_ref","muscleColors","className","children","muscle","index","concat","style","width","title","getUpperLowerDistribution","upperMuscles","lowerMuscles","distribution","upper","lower","core","totalWeight","forEach","upperPercent","round","lowerPercent","corePercent","total","diff","calculateDayMuscleDistribution","muscleTotal","sortedMuscles","entries","_ref2","sort","a","b","top3","slice","remaining","item","length","otherWeight","reduce","sum","push","maxIndex","indexOf","max","removeExercise","exerciseIndex","updatedExercises","_","toggleExerciseCollapse","prev","updateExerciseSets","change","newSets","updatedExercise","additionalSets","targetValue","toString","updateSetValue","setIndex","field","value","updatedSetResults","updateExerciseName","newName","addWorkout","createWorkout","trim","newWorkout","cancelWorkoutCreation","updateWorkoutName","selectWorkout","addWorkoutToRoutine","workoutId","updateWorkoutPlans","removeWorkoutFromRoutine","newWorkoutPlans","week","weekIndex","dayIndex","_newWorkoutPlans$week","RoutineBuilderView","onClick","onChange","e","parseInt","target","num","find","w","WeeklySummaryView","from","_workoutPlans$weekInd","dayPlan","workoutName","idx","toggleMuscleGroupCollapse","muscleGroup","ExerciseLibraryView","filteredExercisesByMuscle","_ref3","filtered","type","placeholder","_ref4","isCollapsed","join","WorkoutBuilderView","_currentWorkout$exerc","_currentWorkout$exerc2","_currentWorkout$exerc3","_currentWorkout$exerc4","autoFocus","onKeyDown","key","_exercise$muscleGroup","onBlur","_exercise$setResults","setResult","_ref5","_workout$exercises","_workout$exercises2","_workout$exercises3","_workout$exercises4"],"sources":["/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/src/workout-planner.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, Search, X, GripVertical, Trash2, ChevronDown, Target, Calendar, BarChart3, Dumbbell, Minus, RotateCcw } from 'lucide-react';\n\nconst WorkoutApp = () => {\n  const exerciseLibraryByMuscle = {\n    'Back': [\n      { id: 1, name: 'Cross-Body Lat Pull-Around', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 2, name: 'Seated DB Shoulder Press', muscleGroups: ['Back', 'Shoulders'], muscleWeights: [60, 40] },\n      { id: 3, name: 'Paused Barbell RDL', muscleGroups: ['Back', 'Legs'], muscleWeights: [60, 40] },\n      { id: 4, name: 'Chest-Supported Machine Row', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 5, name: 'Superset A1: Assisted Pull-Up', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 6, name: 'Neutral-Grip Lat Pulldown', muscleGroups: ['Back'], muscleWeights: [100] }\n    ],\n    'Chest': [\n      { id: 7, name: 'Low Incline Smith Machine Press', muscleGroups: ['Chest'], muscleWeights: [100] },\n      { id: 8, name: 'Bent-Over Cable Pec Flye', muscleGroups: ['Chest'], muscleWeights: [100] }\n    ],\n    'Legs': [\n      { id: 9, name: 'Machine Hip Adduction', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 10, name: 'Leg Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 11, name: 'Superset B1: Seated Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 12, name: 'Superset B2: Leg Extension', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 13, name: 'Lying Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 14, name: 'Hack Squat', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 15, name: 'Leg Press Calf Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 16, name: 'Standing Calf Raise', muscleGroups: ['Legs'], muscleWeights: [100] }\n    ],\n    'Shoulders': [\n      { id: 17, name: 'Cuffed Behind-The-Back Lateral Raise', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 18, name: 'Cable Paused Shrug-In', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 19, name: 'Cable Reverse Flye (Mechanical Dropset)', muscleGroups: ['Shoulders'], muscleWeights: [100] }\n    ],\n    'Triceps': [\n      { id: 20, name: 'Overhead Cable Triceps Extension (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 21, name: 'Superset A2: Paused Assisted Dip', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 22, name: 'Triceps Pressdown (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 23, name: 'Cable Triceps Kickback', muscleGroups: ['Triceps'], muscleWeights: [100] }\n    ],\n    'Abs': [\n      { id: 24, name: 'Lying Paused Rope Face Pull', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 25, name: 'Cable Crunch', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 26, name: 'Roman Chair Leg Raise', muscleGroups: ['Abs'], muscleWeights: [100] }\n    ],\n    'Biceps': [\n      { id: 27, name: 'Hammer Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 28, name: 'Bayesian Cable Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 29, name: 'Bottom-2/3 Constant Tension Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] }\n    ],\n    'Custom': [\n      { id: 30, name: 'Weak Point Exercise 1', muscleGroups: ['Custom'], muscleWeights: [100] },\n      { id: 31, name: 'Weak Point Exercise 2 (optional)', muscleGroups: ['Custom'], muscleWeights: [100] }\n    ]\n  };\n\n  // Flatten the exercise library for backward compatibility\n  const exerciseLibrary = Object.values(exerciseLibraryByMuscle).flat();\n\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const [currentDay, setCurrentDay] = useState(0);\n  const [currentWeek, setCurrentWeek] = useState(0);\n  const [currentTab, setCurrentTab] = useState('workout');\n  const [showExerciseLibrary, setShowExerciseLibrary] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dayNames] = useState(days.map(day => day));\n  const [workoutPlans, setWorkoutPlans] = useState(\n    Array(4).fill().map(() => Array(3).fill().map(() => []))\n  );\n  const [collapsedExercises, setCollapsedExercises] = useState({});\n  const [showUpperLower, setShowUpperLower] = useState(false);\n  const [libraryMode, setLibraryMode] = useState('exercises');\n  const [collapsedMuscleGroups, setCollapsedMuscleGroups] = useState({});\n  \n  // Routine Builder State\n  const [rotationCycles, setRotationCycles] = useState(4);\n  const [selectedWorkouts, setSelectedWorkouts] = useState([1, 2, 3]);\n  const [createdWorkouts, setCreatedWorkouts] = useState([\n    { id: 1, name: 'Push', exercises: [] },\n    { id: 2, name: 'Pull', exercises: [] },\n    { id: 3, name: 'Legs', exercises: [] },\n    { id: 4, name: 'Upper', exercises: [] },\n    { id: 5, name: 'Lower', exercises: [] }\n  ]);\n  \n  // Workout Builder State\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [isCreatingWorkout, setIsCreatingWorkout] = useState(false);\n  const [newWorkoutName, setNewWorkoutName] = useState('');\n  const [editingExerciseName, setEditingExerciseName] = useState(null);\n\n  const filteredExercises = exerciseLibrary.filter(exercise => {\n    return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const addExerciseDirectly = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const newExercise = {\n      id: Date.now(),\n      exerciseId: exercise.id,\n      name: exercise.name,\n      muscleGroups: exercise.muscleGroups,\n      sets: 3,\n      repsOrTime: 'reps',\n      repsValue: 10,\n      timeValue: 30,\n      setResults: Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, newExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, newExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n  };\n\n  const copyExerciseFromWorkout = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const copiedExercise = {\n      ...exercise,\n      id: Date.now() + Math.random(),\n      setResults: exercise.setResults ? exercise.setResults.map(set => ({ ...set })) : Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, copiedExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, copiedExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n  };\n\n  const MuscleGroupBar = ({ muscleGroups, muscleWeights }) => {\n    const muscleColors = {\n      'Chest': 'bg-red-500',\n      'Triceps': 'bg-orange-500',\n      'Shoulders': 'bg-yellow-500',\n      'Legs': 'bg-green-500',\n      'Back': 'bg-blue-500',\n      'Abs': 'bg-purple-500',\n      'Biceps': 'bg-teal-500',\n      'Custom': 'bg-pink-500',\n      'Upper': 'bg-blue-600',\n      'Lower': 'bg-green-600',\n      'Other': 'bg-gray-400'\n    };\n\n    return (\n      <div className=\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\">\n        {muscleGroups.map((muscle, index) => (\n          <div\n            key={muscle}\n            className={`${muscleColors[muscle] || 'bg-gray-400'} h-full`}\n            style={{ width: `${muscleWeights[index]}%` }}\n            title={`${muscle}: ${muscleWeights[index]}%`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const getUpperLowerDistribution = (exercises) => {\n    const upperMuscles = ['Chest', 'Triceps', 'Back', 'Biceps', 'Shoulders'];\n    const lowerMuscles = ['Legs'];\n    \n    const distribution = { upper: 0, lower: 0, core: 0 };\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          totalWeight += weight;\n          \n          if (upperMuscles.includes(muscle)) {\n            distribution.upper += weight;\n          } else if (lowerMuscles.includes(muscle)) {\n            distribution.lower += weight;\n          } else if (muscle === 'Abs') {\n            distribution.core += weight;\n          }\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { upper: 0, lower: 0, core: 0 };\n\n    let upperPercent = Math.round((distribution.upper / totalWeight) * 100);\n    let lowerPercent = Math.round((distribution.lower / totalWeight) * 100);\n    let corePercent = Math.round((distribution.core / totalWeight) * 100);\n\n    const total = upperPercent + lowerPercent + corePercent;\n    if (total !== 100 && total > 0) {\n      const diff = 100 - total;\n      if (upperPercent >= lowerPercent && upperPercent >= corePercent) {\n        upperPercent += diff;\n      } else if (lowerPercent >= corePercent) {\n        lowerPercent += diff;\n      } else {\n        corePercent += diff;\n      }\n    }\n\n    return {\n      upper: upperPercent,\n      lower: lowerPercent,\n      core: corePercent\n    };\n  };\n\n  const calculateDayMuscleDistribution = (exercises) => {\n    const muscleTotal = {};\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          muscleTotal[muscle] = (muscleTotal[muscle] || 0) + weight;\n          totalWeight += weight;\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { muscleGroups: [], muscleWeights: [] };\n\n    const sortedMuscles = Object.entries(muscleTotal)\n      .map(([muscle, weight]) => ({ \n        muscle, \n        weight: (weight / totalWeight) * 100\n      }))\n      .sort((a, b) => b.weight - a.weight);\n\n    const top3 = sortedMuscles.slice(0, 3);\n    const remaining = sortedMuscles.slice(3);\n    \n    const muscleGroups = top3.map(item => item.muscle);\n    let muscleWeights = top3.map(item => item.weight);\n    \n    if (remaining.length > 0) {\n      const otherWeight = remaining.reduce((sum, item) => sum + item.weight, 0);\n      muscleGroups.push('Other');\n      muscleWeights.push(otherWeight);\n    }\n\n    muscleWeights = muscleWeights.map(weight => Math.round(weight));\n    \n    const total = muscleWeights.reduce((sum, weight) => sum + weight, 0);\n    if (total !== 100 && muscleWeights.length > 0) {\n      const diff = 100 - total;\n      const maxIndex = muscleWeights.indexOf(Math.max(...muscleWeights));\n      muscleWeights[maxIndex] += diff;\n    }\n\n    return { muscleGroups, muscleWeights };\n  };\n\n  const removeExercise = (exerciseIndex) => {\n    if (!currentWorkout) return;\n    \n    const updatedExercises = currentWorkout.exercises.filter((_, index) => index !== exerciseIndex);\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const toggleExerciseCollapse = (exerciseId) => {\n    setCollapsedExercises(prev => ({\n      ...prev,\n      [exerciseId]: !prev[exerciseId]\n    }));\n  };\n\n  const updateExerciseSets = (exerciseIndex, change) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const newSets = Math.max(1, exercise.sets + change);\n    \n    const updatedExercise = { ...exercise, sets: newSets };\n    \n    if (newSets > exercise.setResults.length) {\n      const additionalSets = newSets - exercise.setResults.length;\n      const targetValue = exercise.repsOrTime === 'time' ? exercise.timeValue : exercise.repsValue;\n      updatedExercise.setResults = [\n        ...exercise.setResults,\n        ...Array(additionalSets).fill().map(() => ({ weight: '', reps: targetValue.toString() }))\n      ];\n    } else if (newSets < exercise.setResults.length) {\n      updatedExercise.setResults = exercise.setResults.slice(0, newSets);\n    }\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateSetValue = (exerciseIndex, setIndex, field, value) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const updatedSetResults = [...exercise.setResults];\n    \n    if (!updatedSetResults[setIndex]) {\n      updatedSetResults[setIndex] = { weight: '', reps: '' };\n    }\n    \n    updatedSetResults[setIndex][field] = value;\n    \n    const updatedExercise = { ...exercise, setResults: updatedSetResults };\n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateExerciseName = (exerciseIndex, newName) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = { ...updatedExercises[exerciseIndex], name: newName };\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  // Routine Builder Functions\n  const addWorkout = () => {\n    setIsCreatingWorkout(true);\n    setNewWorkoutName('');\n  };\n  \n  const createWorkout = () => {\n    if (!newWorkoutName.trim()) return;\n    \n    const newWorkout = {\n      id: Date.now(),\n      name: newWorkoutName.trim(),\n      exercises: []\n    };\n    setCreatedWorkouts(prev => [...prev, newWorkout]);\n    setCurrentWorkout(newWorkout);\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n  \n  const cancelWorkoutCreation = () => {\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n\n  const updateWorkoutName = (id, newName) => {\n    setCreatedWorkouts(prev => \n      prev.map(workout => \n        workout.id === id ? { ...workout, name: newName } : workout\n      )\n    );\n    if (currentWorkout?.id === id) {\n      setCurrentWorkout({ ...currentWorkout, name: newName });\n    }\n  };\n  \n  const selectWorkout = (workout) => {\n    setCurrentWorkout(workout);\n  };\n\n  const addWorkoutToRoutine = (workoutId) => {\n    if (!selectedWorkouts.includes(workoutId)) {\n      setSelectedWorkouts(prev => [...prev, workoutId]);\n      updateWorkoutPlans();\n    }\n  };\n\n  const removeWorkoutFromRoutine = (workoutId) => {\n    setSelectedWorkouts(prev => prev.filter(id => id !== workoutId));\n    updateWorkoutPlans();\n  };\n\n  const updateWorkoutPlans = () => {\n    const newWorkoutPlans = Array(rotationCycles).fill().map(() => \n      Array(selectedWorkouts.length).fill().map(() => [])\n    );\n    \n    // Preserve existing data where possible\n    workoutPlans.forEach((week, weekIndex) => {\n      if (weekIndex < rotationCycles && week) {\n        week.forEach((day, dayIndex) => {\n          if (dayIndex < selectedWorkouts.length && newWorkoutPlans[weekIndex]?.[dayIndex]) {\n            newWorkoutPlans[weekIndex][dayIndex] = day;\n          }\n        });\n      }\n    });\n    \n    setWorkoutPlans(newWorkoutPlans);\n    \n    // Reset current selections if they're out of bounds\n    if (currentDay >= selectedWorkouts.length && selectedWorkouts.length > 0) setCurrentDay(0);\n    if (currentWeek >= rotationCycles) setCurrentWeek(0);\n  };\n\n  const RoutineBuilderView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Routine Builder</h2>\n        \n        {/* Input Fields */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Routine Settings</h3>\n          \n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Select Workouts for Routine\n              </label>\n              <div className=\"space-y-2\">\n                {createdWorkouts.map(workout => (\n                  <div key={workout.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium text-gray-900\">{workout.name}</span>\n                    <div className=\"flex items-center space-x-2\">\n                      {selectedWorkouts.includes(workout.id) ? (\n                        <button\n                          onClick={() => removeWorkoutFromRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\"\n                        >\n                          Remove\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => addWorkoutToRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\"\n                        >\n                          Add to Routine\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                \n                <button\n                  onClick={addWorkout}\n                  className=\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\"\n                >\n                  + Create New Workout\n                </button>\n              </div>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Number of Cycles\n              </label>\n              <select\n                value={rotationCycles}\n                onChange={(e) => {\n                  setRotationCycles(parseInt(e.target.value));\n                  updateWorkoutPlans();\n                }}\n                className=\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {[1,2,3,4,5,6,8,10,12].map(num => (\n                  <option key={num} value={num}>{num} cycle{num > 1 ? 's' : ''}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          \n          {selectedWorkouts.length > 0 && (\n            <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n              <h4 className=\"font-medium text-blue-900 mb-2\">Current Routine:</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedWorkouts.map((workoutId, index) => {\n                  const workout = createdWorkouts.find(w => w.id === workoutId);\n                  return (\n                    <span key={workoutId} className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\">\n                      {index + 1}. {workout?.name}\n                    </span>\n                  );\n                })}\n              </div>\n              <p className=\"text-sm text-blue-700 mt-2\">\n                {selectedWorkouts.length} workouts × {rotationCycles} cycles = {selectedWorkouts.length * rotationCycles} total workout days\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const WeeklySummaryView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Plan Overview</h2>\n        <div className=\"space-y-3\">\n          {Array.from({length: rotationCycles}, (_, weekIndex) => (\n            <div key={weekIndex} className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n              <div className=\"p-5\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cycle {weekIndex + 1}</h3>\n                <div className=\"space-y-3\">\n                  {Array.from({length: selectedWorkouts.length}, (_, dayIndex) => {\n                    const dayPlan = workoutPlans[weekIndex]?.[dayIndex] || [];\n                    const { muscleGroups, muscleWeights } = calculateDayMuscleDistribution(dayPlan);\n                    const workoutId = selectedWorkouts[dayIndex];\n                    const workout = createdWorkouts.find(w => w.id === workoutId);\n                    const workoutName = workout ? workout.name : `Workout ${dayIndex + 1}`;\n                    \n                    return (\n                      <div key={dayIndex} className=\"bg-gray-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-gray-700\">{workoutName}</span>\n                          <span className=\"text-xs text-gray-500\">\n                            {dayPlan.length} exercise{dayPlan.length !== 1 ? 's' : ''}\n                          </span>\n                        </div>\n                        \n                        {muscleGroups.length > 0 && (\n                          <div className=\"mb-2\">\n                            <MuscleGroupBar muscleGroups={muscleGroups} muscleWeights={muscleWeights} />\n                          </div>\n                        )}\n                        \n                        {dayPlan.length > 0 ? (\n                          <div className=\"space-y-1\">\n                            {dayPlan.map((exercise, idx) => (\n                              <div key={idx} className=\"text-xs text-gray-600\">\n                                {exercise.name} - {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <div className=\"text-center py-2 text-gray-400\">\n                            <p className=\"text-xs\">Rest day</p>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const toggleMuscleGroupCollapse = (muscleGroup) => {\n    setCollapsedMuscleGroups(prev => ({\n      ...prev,\n      [muscleGroup]: !prev[muscleGroup]\n    }));\n  };\n\n  const ExerciseLibraryView = () => {\n    const filteredExercisesByMuscle = {};\n    \n    // Filter exercises by search term and organize by muscle group\n    Object.entries(exerciseLibraryByMuscle).forEach(([muscleGroup, exercises]) => {\n      const filtered = exercises.filter(exercise => \n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      if (filtered.length > 0) {\n        filteredExercisesByMuscle[muscleGroup] = filtered;\n      }\n    });\n\n    return (\n      <div className=\"flex-1 flex flex-col pb-24 bg-gray-50\">\n        <div className=\"p-6 bg-white border-b border-gray-100\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Exercise Library</h2>\n          <div className=\"relative\">\n            <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search exercises...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"space-y-4\">\n            {Object.entries(filteredExercisesByMuscle).map(([muscleGroup, exercises]) => {\n              const isCollapsed = collapsedMuscleGroups[muscleGroup];\n              const muscleColors = {\n                'Chest': 'bg-red-500',\n                'Triceps': 'bg-orange-500',\n                'Shoulders': 'bg-yellow-500',\n                'Legs': 'bg-green-500',\n                'Back': 'bg-blue-500',\n                'Abs': 'bg-purple-500',\n                'Biceps': 'bg-teal-500',\n                'Custom': 'bg-pink-500'\n              };\n\n              return (\n                <div key={muscleGroup} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                  <button\n                    onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                    className=\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                      <span className=\"text-sm text-gray-500\">({exercises.length} exercises)</span>\n                    </div>\n                    <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                  </button>\n                  \n                  {!isCollapsed && (\n                    <div className=\"border-t border-gray-100 p-4 space-y-3\">\n                      {exercises.map(exercise => (\n                        <div\n                          key={exercise.id}\n                          className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex-1\">\n                            <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                            {exercise.muscleWeights && (\n                              <div className=\"mt-2 mb-1\">\n                                <MuscleGroupBar \n                                  muscleGroups={exercise.muscleGroups} \n                                  muscleWeights={exercise.muscleWeights} \n                                />\n                              </div>\n                            )}\n                            <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                          </div>\n                          <button\n                            onClick={() => addExerciseDirectly(exercise)}\n                            className=\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\"\n                          >\n                            <Plus className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const WorkoutBuilderView = () => {\n    return (\n      <div className=\"flex-1 flex flex-col bg-gray-50\">\n        {/* Workout Repository */}\n        <div className=\"bg-white px-6 py-4 border-b border-gray-100\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Workout Builder</h2>\n          \n          {/* Created Workouts */}\n          <div className=\"mb-4\">\n            <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n              {createdWorkouts.map(workout => (\n                <button\n                  key={workout.id}\n                  onClick={() => selectWorkout(workout)}\n                  className={`px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all ${\n                    currentWorkout?.id === workout.id\n                      ? 'bg-blue-500 text-white shadow-md'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  {workout.name}\n                  {workout.exercises && workout.exercises.length > 0 && (\n                    <span className=\"ml-2 text-xs opacity-75\">({workout.exercises.length})</span>\n                  )}\n                </button>\n              ))}\n              \n              {isCreatingWorkout ? (\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"text\"\n                    value={newWorkoutName}\n                    onChange={(e) => setNewWorkoutName(e.target.value)}\n                    placeholder=\"Workout name\"\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    autoFocus\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') createWorkout();\n                      if (e.key === 'Escape') cancelWorkoutCreation();\n                    }}\n                  />\n                  <button\n                    onClick={createWorkout}\n                    className=\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\"\n                  >\n                    Create\n                  </button>\n                  <button\n                    onClick={cancelWorkoutCreation}\n                    className=\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <button\n                  onClick={addWorkout}\n                  className=\"px-4 py-2 border-2 border-dashed border-gray-300 rounded-xl text-sm text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors whitespace-nowrap\"\n                >\n                  + Create New Workout\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {currentWorkout && (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-xl font-bold text-gray-900\">{currentWorkout.name}</h3>\n                <p className=\"text-sm text-gray-500\">\n                  {currentWorkout.exercises?.length || 0} exercise{(currentWorkout.exercises?.length || 0) !== 1 ? 's' : ''}\n                </p>\n              </div>\n              <button\n                onClick={() => setShowExerciseLibrary(true)}\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                <span>Add Exercise</span>\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto pb-24\">\n          {!currentWorkout ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Dumbbell className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">Select a workout to get started</p>\n              <p className=\"text-sm text-gray-500\">Choose a workout from above or create a new one</p>\n            </div>\n          ) : currentWorkout.exercises?.length === 0 ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Target className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">No exercises in {currentWorkout.name}</p>\n              <p className=\"text-sm text-gray-500\">Use the \"Add Exercise\" button to add your first exercise</p>\n            </div>\n          ) : (\n            <div className=\"p-6 space-y-4\">\n              {currentWorkout.exercises?.map((exercise, exerciseIndex) => {\n                const isCollapsed = collapsedExercises[exercise.id];\n                \n                return (\n                  <div key={exercise.id} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                    <div className=\"flex items-center justify-between p-5\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"p-1 text-gray-400\">\n                          <GripVertical className=\"w-4 h-4\" />\n                        </div>\n                        <button\n                          onClick={() => toggleExerciseCollapse(exercise.id)}\n                          className=\"p-1 hover:bg-gray-100 rounded-lg transition-colors\"\n                        >\n                          <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        <div>\n                          {editingExerciseName === exercise.id ? (\n                            <input\n                              type=\"text\"\n                              value={exercise.name}\n                              onChange={(e) => updateExerciseName(exerciseIndex, e.target.value)}\n                              onBlur={() => setEditingExerciseName(null)}\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter') setEditingExerciseName(null);\n                                if (e.key === 'Escape') setEditingExerciseName(null);\n                              }}\n                              className=\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                              autoFocus\n                            />\n                          ) : (\n                            <h3 \n                              className=\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\"\n                              onClick={() => setEditingExerciseName(exercise.id)}\n                            >\n                              {exercise.name}\n                            </h3>\n                          )}\n                          <p className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups?.join(', ')}</p>\n                          {isCollapsed && (\n                            <p className=\"text-sm text-gray-600 mt-1 font-medium\">\n                              {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removeExercise(exerciseIndex)}\n                        className=\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n\n                    {!isCollapsed && (\n                      <div className=\"px-5 pb-5 border-t border-gray-50\">\n                        <div className=\"py-4 border-b border-gray-100\">\n                          <h4 className=\"text-sm font-medium text-gray-700 mb-4 underline\">Target</h4>\n                          \n                          <div className=\"mb-4\">\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-sm font-medium text-gray-700\">Sets</span>\n                              <div className=\"flex items-center space-x-4\">\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, -1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Minus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                                <span className=\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\">{exercise.sets}</span>\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, 1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Plus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-3 px-4 pt-4\">\n                          {Array.from({ length: exercise.sets }, (_, setIndex) => {\n                            const setResult = exercise.setResults?.[setIndex] || { weight: '', reps: '' };\n                            \n                            return (\n                              <div key={setIndex} className=\"p-3 bg-gray-50 rounded-xl relative\">\n                                <div className=\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\">\n                                  {setIndex + 1}\n                                </div>\n                                <div className=\"flex items-center justify-between pl-4\">\n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Weight</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.weight || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'weight', e.target.value)}\n                                      placeholder=\"lbs\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                  \n                                  <span className=\"text-lg text-gray-400\">×</span>\n                                  \n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Reps</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.reps || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'reps', e.target.value)}\n                                      placeholder=\"10\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\">\n      <div className=\"bg-white border-b border-gray-100 p-6 shadow-sm\">\n        <h1 className=\"text-2xl font-bold text-center text-gray-900\">Workout Tracker</h1>\n      </div>\n\n      {currentTab === 'workout' && <WorkoutBuilderView />}\n      {currentTab === 'routine' && <RoutineBuilderView />}\n      {currentTab === 'weekly' && <WeeklySummaryView />}\n\n      <div className=\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\">\n        <button\n          onClick={() => setCurrentTab('workout')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'workout' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <Target className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Workout Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('routine')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'routine' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <RotateCcw className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Routine Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('weekly')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'weekly' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <BarChart3 className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Plan Overview</span>\n        </button>\n      </div>\n\n      {showExerciseLibrary && (\n        <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\">\n          <div className=\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\">\n            <div className=\"p-6 border-b border-gray-100 flex items-center justify-between\">\n              <h2 className=\"text-xl font-bold text-gray-900\">\n                {libraryMode === 'exercises' ? 'Exercise Library' : 'Copy from Other Workouts'}\n              </h2>\n              <button\n                onClick={() => {\n                  setShowExerciseLibrary(false);\n                  setLibraryMode('exercises');\n                }}\n                className=\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\"\n              >\n                <X className=\"w-4 h-4 text-gray-600\" />\n              </button>\n            </div>\n\n            <div className=\"p-4 border-b border-gray-100\">\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setLibraryMode('exercises')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'exercises'\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Add New Exercises\n                </button>\n                <button\n                  onClick={() => setLibraryMode('copy')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'copy'\n                      ? 'bg-green-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Copy from Other Workouts\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-6\">\n              {libraryMode === 'exercises' ? (\n                <div className=\"space-y-4\">\n                  {Object.entries(exerciseLibraryByMuscle).map(([muscleGroup, exercises]) => {\n                    const filteredExercises = exercises.filter(exercise => \n                      exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    \n                    if (filteredExercises.length === 0) return null;\n                    \n                    const isCollapsed = collapsedMuscleGroups[muscleGroup];\n                    const muscleColors = {\n                      'Chest': 'bg-red-500',\n                      'Triceps': 'bg-orange-500',\n                      'Shoulders': 'bg-yellow-500',\n                      'Legs': 'bg-green-500',\n                      'Back': 'bg-blue-500',\n                      'Abs': 'bg-purple-500',\n                      'Biceps': 'bg-teal-500',\n                      'Custom': 'bg-pink-500'\n                    };\n\n                    return (\n                      <div key={muscleGroup} className=\"bg-gray-50 rounded-xl overflow-hidden\">\n                        <button\n                          onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                          className=\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                            <span className=\"text-sm text-gray-500\">({filteredExercises.length} exercises)</span>\n                          </div>\n                          <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        \n                        {!isCollapsed && (\n                          <div className=\"border-t border-gray-200 p-4 space-y-3\">\n                            {filteredExercises.map(exercise => (\n                              <div\n                                key={exercise.id}\n                                className=\"bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                              >\n                                <div className=\"flex-1\">\n                                  <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                                  {exercise.muscleWeights && (\n                                    <div className=\"mt-2 mb-1\">\n                                      <MuscleGroupBar \n                                        muscleGroups={exercise.muscleGroups} \n                                        muscleWeights={exercise.muscleWeights} \n                                      />\n                                    </div>\n                                  )}\n                                  <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                                </div>\n                                <button\n                                  onClick={() => addExerciseDirectly(exercise)}\n                                  className=\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\"\n                                >\n                                  <Plus className=\"w-4 h-4\" />\n                                </button>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {createdWorkouts\n                    .filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0)\n                    .map(workout => (\n                    <div key={workout.id} className=\"bg-gray-50 rounded-xl p-4\">\n                      <h3 className=\"text-md font-semibold text-gray-900 mb-3\">\n                        {workout.name} ({workout.exercises?.length || 0} exercises)\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {workout.exercises?.map((exercise, exerciseIndex) => (\n                          <div\n                            key={exercise.id}\n                            className=\"p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors\"\n                            onClick={() => copyExerciseFromWorkout(exercise)}\n                          >\n                            <div className=\"flex-1\">\n                              <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                              <div className=\"text-xs text-gray-500 mt-1\">\n                                {exercise.sets} sets × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                              </div>\n                              {exercise.muscleGroups && (\n                                <div className=\"text-xs text-gray-400 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                              )}\n                            </div>\n                            <button className=\"w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center hover:bg-green-600 transition-colors\">\n                              <Plus className=\"w-4 h-4\" />\n                            </button>\n                          </div>\n                        ))}\n                        {(!workout.exercises || workout.exercises.length === 0) && (\n                          <div className=\"text-center py-4 text-gray-400\">\n                            <p className=\"text-sm\">No exercises in this workout</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  {createdWorkouts.filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0).length === 0 && (\n                    <div className=\"text-center py-8 text-gray-400\">\n                      <Dumbbell className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                      <p className=\"text-sm\">No other workouts with exercises to copy from</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkoutApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}