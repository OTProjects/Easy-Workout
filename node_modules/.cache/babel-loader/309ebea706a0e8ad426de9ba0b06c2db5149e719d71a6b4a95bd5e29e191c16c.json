{"ast":null,"code":"import _objectSpread from\"/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Plus,Search,X,GripVertical,Trash2,ChevronDown,Target,Calendar,BarChart3,Dumbbell,Minus,RotateCcw}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorkoutApp=()=>{const exerciseLibraryByMuscle={'Back':[{id:1,name:'Cross-Body Lat Pull-Around',muscleGroups:['Back'],muscleWeights:[100]},{id:2,name:'Seated DB Shoulder Press',muscleGroups:['Back','Shoulders'],muscleWeights:[60,40]},{id:3,name:'Paused Barbell RDL',muscleGroups:['Back','Legs'],muscleWeights:[60,40]},{id:4,name:'Chest-Supported Machine Row',muscleGroups:['Back'],muscleWeights:[100]},{id:5,name:'Superset A1: Assisted Pull-Up',muscleGroups:['Back'],muscleWeights:[100]},{id:6,name:'Neutral-Grip Lat Pulldown',muscleGroups:['Back'],muscleWeights:[100]}],'Chest':[{id:7,name:'Low Incline Smith Machine Press',muscleGroups:['Chest'],muscleWeights:[100]},{id:8,name:'Bent-Over Cable Pec Flye',muscleGroups:['Chest'],muscleWeights:[100]}],'Legs':[{id:9,name:'Machine Hip Adduction',muscleGroups:['Legs'],muscleWeights:[100]},{id:10,name:'Leg Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:11,name:'Superset B1: Seated Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:12,name:'Superset B2: Leg Extension',muscleGroups:['Legs'],muscleWeights:[100]},{id:13,name:'Lying Leg Curl',muscleGroups:['Legs'],muscleWeights:[100]},{id:14,name:'Hack Squat',muscleGroups:['Legs'],muscleWeights:[100]},{id:15,name:'Leg Press Calf Press',muscleGroups:['Legs'],muscleWeights:[100]},{id:16,name:'Standing Calf Raise',muscleGroups:['Legs'],muscleWeights:[100]}],'Shoulders':[{id:17,name:'Cuffed Behind-The-Back Lateral Raise',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:18,name:'Cable Paused Shrug-In',muscleGroups:['Shoulders'],muscleWeights:[100]},{id:19,name:'Cable Reverse Flye (Mechanical Dropset)',muscleGroups:['Shoulders'],muscleWeights:[100]}],'Triceps':[{id:20,name:'Overhead Cable Triceps Extension (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:21,name:'Superset A2: Paused Assisted Dip',muscleGroups:['Triceps'],muscleWeights:[100]},{id:22,name:'Triceps Pressdown (Bar)',muscleGroups:['Triceps'],muscleWeights:[100]},{id:23,name:'Cable Triceps Kickback',muscleGroups:['Triceps'],muscleWeights:[100]}],'Abs':[{id:24,name:'Lying Paused Rope Face Pull',muscleGroups:['Abs'],muscleWeights:[100]},{id:25,name:'Cable Crunch',muscleGroups:['Abs'],muscleWeights:[100]},{id:26,name:'Roman Chair Leg Raise',muscleGroups:['Abs'],muscleWeights:[100]}],'Biceps':[{id:27,name:'Hammer Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:28,name:'Bayesian Cable Curl',muscleGroups:['Biceps'],muscleWeights:[100]},{id:29,name:'Bottom-2/3 Constant Tension Preacher Curl',muscleGroups:['Biceps'],muscleWeights:[100]}],'Custom':[{id:30,name:'Weak Point Exercise 1',muscleGroups:['Custom'],muscleWeights:[100]},{id:31,name:'Weak Point Exercise 2 (optional)',muscleGroups:['Custom'],muscleWeights:[100]}]};// Flatten the exercise library for backward compatibility\nconst exerciseLibrary=Object.values(exerciseLibraryByMuscle).flat();const days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];const[currentDay,setCurrentDay]=useState(0);const[currentWeek,setCurrentWeek]=useState(0);const[currentTab,setCurrentTab]=useState('workout');const[showExerciseLibrary,setShowExerciseLibrary]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[dayNames]=useState(days.map(day=>day));const[workoutPlans,setWorkoutPlans]=useState(Array(4).fill().map(()=>Array(3).fill().map(()=>[])));const[collapsedExercises,setCollapsedExercises]=useState({});const[showUpperLower,setShowUpperLower]=useState(false);const[libraryMode,setLibraryMode]=useState('exercises');const[collapsedMuscleGroups,setCollapsedMuscleGroups]=useState({});// Routine Builder State\nconst[rotationCycles,setRotationCycles]=useState(4);const[selectedWorkouts,setSelectedWorkouts]=useState([]);const[createdWorkouts,setCreatedWorkouts]=useState([]);// Workout Builder State\nconst[currentWorkout,setCurrentWorkout]=useState(null);const[isCreatingWorkout,setIsCreatingWorkout]=useState(false);const[newWorkoutName,setNewWorkoutName]=useState('');const[editingExerciseName,setEditingExerciseName]=useState(null);const[editingWorkoutName,setEditingWorkoutName]=useState(null);const[selectedExercises,setSelectedExercises]=useState([]);const[selectedCopyExercises,setSelectedCopyExercises]=useState([]);const filteredExercises=exerciseLibrary.filter(exercise=>{return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());});const addExerciseDirectly=exercise=>{if(!currentWorkout)return;const newExercise={id:Date.now(),exerciseId:exercise.id,name:exercise.name,muscleGroups:exercise.muscleGroups,sets:3,repsOrTime:'reps',repsValue:10,timeValue:30,setResults:Array(3).fill().map(()=>({weight:'',reps:'10'}))};const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,newExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,newExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);};const addMultipleExercises=()=>{if(!currentWorkout||selectedExercises.length===0)return;const newExercises=selectedExercises.map(exercise=>({id:Date.now()+Math.random(),exerciseId:exercise.id,name:exercise.name,muscleGroups:exercise.muscleGroups,sets:3,repsOrTime:'reps',repsValue:10,timeValue:30,setResults:Array(3).fill().map(()=>({weight:'',reps:'10'}))}));const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,...newExercises]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,...newExercises]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);};const toggleExerciseSelection=exercise=>{setSelectedExercises(prev=>{const isSelected=prev.some(e=>e.id===exercise.id);if(isSelected){return prev.filter(e=>e.id!==exercise.id);}else{return[...prev,exercise];}});};const updateWorkoutNameInline=(workoutId,newName)=>{const updatedWorkouts=createdWorkouts.map(workout=>workout.id===workoutId?_objectSpread(_objectSpread({},workout),{},{name:newName}):workout);setCreatedWorkouts(updatedWorkouts);if((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workoutId){setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{name:newName}));}};const copyExerciseFromWorkout=exercise=>{if(!currentWorkout)return;const copiedExercise=_objectSpread(_objectSpread({},exercise),{},{id:Date.now()+Math.random(),setResults:exercise.setResults?exercise.setResults.map(set=>_objectSpread({},set)):Array(3).fill().map(()=>({weight:'',reps:'10'}))});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,copiedExercise]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,copiedExercise]}));setShowExerciseLibrary(false);setLibraryMode('exercises');};const toggleCopyExerciseSelection=exercise=>{setSelectedCopyExercises(prev=>{const isSelected=prev.some(e=>e.id===exercise.id);if(isSelected){return prev.filter(e=>e.id!==exercise.id);}else{return[...prev,exercise];}});};const addMultipleCopyExercises=()=>{if(!currentWorkout||selectedCopyExercises.length===0)return;const copiedExercises=selectedCopyExercises.map(exercise=>_objectSpread(_objectSpread({},exercise),{},{id:Date.now()+Math.random(),setResults:exercise.setResults?exercise.setResults.map(set=>_objectSpread({},set)):Array(3).fill().map(()=>({weight:'',reps:'10'}))}));const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:[...workout.exercises,...copiedExercises]}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:[...currentWorkout.exercises,...copiedExercises]}));setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedCopyExercises([]);};const MuscleGroupBar=_ref=>{let{muscleGroups,muscleWeights}=_ref;const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500','Upper':'bg-blue-600','Lower':'bg-green-600','Other':'bg-gray-400'};return/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\",children:muscleGroups.map((muscle,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(muscleColors[muscle]||'bg-gray-400',\" h-full\"),style:{width:\"\".concat(muscleWeights[index],\"%\")},title:\"\".concat(muscle,\": \").concat(muscleWeights[index],\"%\")},muscle))});};const getUpperLowerDistribution=exercises=>{const upperMuscles=['Chest','Triceps','Back','Biceps','Shoulders'];const lowerMuscles=['Legs'];const distribution={upper:0,lower:0,core:0};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;totalWeight+=weight;if(upperMuscles.includes(muscle)){distribution.upper+=weight;}else if(lowerMuscles.includes(muscle)){distribution.lower+=weight;}else if(muscle==='Abs'){distribution.core+=weight;}});}});if(totalWeight===0)return{upper:0,lower:0,core:0};let upperPercent=Math.round(distribution.upper/totalWeight*100);let lowerPercent=Math.round(distribution.lower/totalWeight*100);let corePercent=Math.round(distribution.core/totalWeight*100);const total=upperPercent+lowerPercent+corePercent;if(total!==100&&total>0){const diff=100-total;if(upperPercent>=lowerPercent&&upperPercent>=corePercent){upperPercent+=diff;}else if(lowerPercent>=corePercent){lowerPercent+=diff;}else{corePercent+=diff;}}return{upper:upperPercent,lower:lowerPercent,core:corePercent};};const calculateDayMuscleDistribution=exercises=>{const muscleTotal={};let totalWeight=0;exercises.forEach(exercise=>{if(exercise.muscleGroups&&exercise.muscleWeights){exercise.muscleGroups.forEach((muscle,index)=>{const weight=exercise.muscleWeights[index]||0;muscleTotal[muscle]=(muscleTotal[muscle]||0)+weight;totalWeight+=weight;});}});if(totalWeight===0)return{muscleGroups:[],muscleWeights:[]};const sortedMuscles=Object.entries(muscleTotal).map(_ref2=>{let[muscle,weight]=_ref2;return{muscle,weight:weight/totalWeight*100};}).sort((a,b)=>b.weight-a.weight);const top3=sortedMuscles.slice(0,3);const remaining=sortedMuscles.slice(3);const muscleGroups=top3.map(item=>item.muscle);let muscleWeights=top3.map(item=>item.weight);if(remaining.length>0){const otherWeight=remaining.reduce((sum,item)=>sum+item.weight,0);muscleGroups.push('Other');muscleWeights.push(otherWeight);}muscleWeights=muscleWeights.map(weight=>Math.round(weight));const total=muscleWeights.reduce((sum,weight)=>sum+weight,0);if(total!==100&&muscleWeights.length>0){const diff=100-total;const maxIndex=muscleWeights.indexOf(Math.max(...muscleWeights));muscleWeights[maxIndex]+=diff;}return{muscleGroups,muscleWeights};};const removeExercise=exerciseIndex=>{if(!currentWorkout)return;const updatedExercises=currentWorkout.exercises.filter((_,index)=>index!==exerciseIndex);const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const toggleExerciseCollapse=exerciseId=>{setCollapsedExercises(prev=>_objectSpread(_objectSpread({},prev),{},{[exerciseId]:!prev[exerciseId]}));};const updateExerciseSets=(exerciseIndex,change)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const newSets=Math.max(1,exercise.sets+change);const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{sets:newSets});if(newSets>exercise.setResults.length){const additionalSets=newSets-exercise.setResults.length;const targetValue=exercise.repsOrTime==='time'?exercise.timeValue:exercise.repsValue;updatedExercise.setResults=[...exercise.setResults,...Array(additionalSets).fill().map(()=>({weight:'',reps:targetValue.toString()}))];}else if(newSets<exercise.setResults.length){updatedExercise.setResults=exercise.setResults.slice(0,newSets);}const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateSetValue=(exerciseIndex,setIndex,field,value)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const exercise=currentWorkout.exercises[exerciseIndex];const updatedSetResults=[...exercise.setResults];if(!updatedSetResults[setIndex]){updatedSetResults[setIndex]={weight:'',reps:''};}updatedSetResults[setIndex][field]=value;const updatedExercise=_objectSpread(_objectSpread({},exercise),{},{setResults:updatedSetResults});const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=updatedExercise;const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};const updateExerciseName=(exerciseIndex,newName)=>{if(!(currentWorkout!==null&&currentWorkout!==void 0&&currentWorkout.exercises[exerciseIndex]))return;const updatedExercises=[...currentWorkout.exercises];updatedExercises[exerciseIndex]=_objectSpread(_objectSpread({},updatedExercises[exerciseIndex]),{},{name:newName});const updatedWorkouts=createdWorkouts.map(workout=>workout.id===currentWorkout.id?_objectSpread(_objectSpread({},workout),{},{exercises:updatedExercises}):workout);setCreatedWorkouts(updatedWorkouts);setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{exercises:updatedExercises}));};// Routine Builder Functions\nconst addWorkout=()=>{setIsCreatingWorkout(true);setNewWorkoutName('');};const createWorkout=()=>{if(!newWorkoutName.trim())return;const newWorkout={id:Date.now(),name:newWorkoutName.trim(),exercises:[]};setCreatedWorkouts(prev=>[...prev,newWorkout]);setCurrentWorkout(newWorkout);setIsCreatingWorkout(false);setNewWorkoutName('');};const cancelWorkoutCreation=()=>{setIsCreatingWorkout(false);setNewWorkoutName('');};const updateWorkoutName=(id,newName)=>{setCreatedWorkouts(prev=>prev.map(workout=>workout.id===id?_objectSpread(_objectSpread({},workout),{},{name:newName}):workout));if((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===id){setCurrentWorkout(_objectSpread(_objectSpread({},currentWorkout),{},{name:newName}));}};const selectWorkout=workout=>{setCurrentWorkout(workout);};const addWorkoutToRoutine=workoutId=>{if(!selectedWorkouts.includes(workoutId)){setSelectedWorkouts(prev=>[...prev,workoutId]);updateWorkoutPlans();}};const removeWorkoutFromRoutine=workoutId=>{setSelectedWorkouts(prev=>prev.filter(id=>id!==workoutId));updateWorkoutPlans();};const updateWorkoutPlans=()=>{const newWorkoutPlans=Array(rotationCycles).fill().map(()=>Array(selectedWorkouts.length).fill().map(()=>[]));// Preserve existing data where possible\nworkoutPlans.forEach((week,weekIndex)=>{if(weekIndex<rotationCycles&&week){week.forEach((day,dayIndex)=>{var _newWorkoutPlans$week;if(dayIndex<selectedWorkouts.length&&(_newWorkoutPlans$week=newWorkoutPlans[weekIndex])!==null&&_newWorkoutPlans$week!==void 0&&_newWorkoutPlans$week[dayIndex]){newWorkoutPlans[weekIndex][dayIndex]=day;}});}});setWorkoutPlans(newWorkoutPlans);// Reset current selections if they're out of bounds\nif(currentDay>=selectedWorkouts.length&&selectedWorkouts.length>0)setCurrentDay(0);if(currentWeek>=rotationCycles)setCurrentWeek(0);};const RoutineBuilderView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Routine Builder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Routine Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Select Workouts for Routine\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[createdWorkouts.map(workout=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:workout.name}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2\",children:selectedWorkouts.includes(workout.id)?/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeWorkoutFromRoutine(workout.id),className:\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\",children:\"Remove\"}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>addWorkoutToRoutine(workout.id),className:\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\",children:\"Add to Routine\"})})]},workout.id)),/*#__PURE__*/_jsx(\"button\",{onClick:addWorkout,className:\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\",children:\"+ Create New Workout\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Number of Cycles\"}),/*#__PURE__*/_jsx(\"select\",{value:rotationCycles,onChange:e=>{setRotationCycles(parseInt(e.target.value));updateWorkoutPlans();},className:\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:[1,2,3,4,5,6,8,10,12].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" cycle\",num>1?'s':'']},num))})]})]}),selectedWorkouts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-900 mb-2\",children:\"Current Routine:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedWorkouts.map((workoutId,index)=>{const workout=createdWorkouts.find(w=>w.id===workoutId);return/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\",children:[index+1,\". \",workout===null||workout===void 0?void 0:workout.name]},workoutId);})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-700 mt-2\",children:[selectedWorkouts.length,\" workouts \\xD7 \",rotationCycles,\" cycles = \",selectedWorkouts.length*rotationCycles,\" total workout days\"]})]})]})]})});const WeeklySummaryView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Plan Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:rotationCycles},(_,weekIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-5\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[\"Cycle \",weekIndex+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:Array.from({length:selectedWorkouts.length},(_,dayIndex)=>{var _workoutPlans$weekInd;const dayPlan=((_workoutPlans$weekInd=workoutPlans[weekIndex])===null||_workoutPlans$weekInd===void 0?void 0:_workoutPlans$weekInd[dayIndex])||[];const{muscleGroups,muscleWeights}=calculateDayMuscleDistribution(dayPlan);const workoutId=selectedWorkouts[dayIndex];const workout=createdWorkouts.find(w=>w.id===workoutId);const workoutName=workout?workout.name:\"Workout \".concat(dayIndex+1);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:workoutName}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[dayPlan.length,\" exercise\",dayPlan.length!==1?'s':'']})]}),muscleGroups.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:muscleGroups,muscleWeights:muscleWeights})}),dayPlan.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:dayPlan.map((exercise,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600\",children:[exercise.name,\" - \",exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]},idx))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-2 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Rest day\"})})]},dayIndex);})})]})},weekIndex))})]})});const toggleMuscleGroupCollapse=muscleGroup=>{setCollapsedMuscleGroups(prev=>_objectSpread(_objectSpread({},prev),{},{[muscleGroup]:!prev[muscleGroup]}));};const ExerciseLibraryView=()=>{const filteredExercisesByMuscle={};// Filter exercises by search term and organize by muscle group\nObject.entries(exerciseLibraryByMuscle).forEach(_ref3=>{let[muscleGroup,exercises]=_ref3;const filtered=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filtered.length>0){filteredExercisesByMuscle[muscleGroup]=filtered;}});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col pb-24 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 bg-white border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-6\",children:\"Exercise Library\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search exercises...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(filteredExercisesByMuscle).map(_ref4=>{let[muscleGroup,exercises]=_ref4;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",exercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-100 p-4 space-y-3\",children:exercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),exercise.muscleWeights&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 mb-1\",children:/*#__PURE__*/_jsx(MuscleGroupBar,{muscleGroups:exercise.muscleGroups,muscleWeights:exercise.muscleWeights})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addExerciseDirectly(exercise),className:\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"})})]},exercise.id))})]},muscleGroup);})})})]});};const WorkoutBuilderView=()=>{var _currentWorkout$exerc,_currentWorkout$exerc2,_currentWorkout$exerc3,_currentWorkout$exerc4;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white px-6 py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900\",children:\"Workout Builder\"}),isCreatingWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWorkoutName,onChange:e=>setNewWorkoutName(e.target.value),placeholder:\"Workout name\",className:\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true,onKeyDown:e=>{if(e.key==='Enter')createWorkout();if(e.key==='Escape')cancelWorkoutCreation();}}),/*#__PURE__*/_jsx(\"button\",{onClick:createWorkout,className:\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\",children:\"Create\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelWorkoutCreation,className:\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\",children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:addWorkout,className:\"px-4 py-2 bg-blue-500 text-white rounded-xl text-sm font-medium hover:bg-blue-600 transition-colors shadow-md\",children:\"+ Create New Workout\"})]}),createdWorkouts.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-2 overflow-x-auto pb-2\",children:createdWorkouts.map(workout=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-1\",children:editingWorkoutName===workout.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:workout.name,onChange:e=>updateWorkoutNameInline(workout.id,e.target.value),onBlur:()=>setEditingWorkoutName(null),onKeyDown:e=>{if(e.key==='Enter')setEditingWorkoutName(null);if(e.key==='Escape')setEditingWorkoutName(null);},className:\"px-3 py-2 border border-blue-500 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true}):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectWorkout(workout),onDoubleClick:()=>setEditingWorkoutName(workout.id),className:\"px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all \".concat((currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)===workout.id?'bg-blue-500 text-white shadow-md':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:[workout.name,workout.exercises&&workout.exercises.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-xs opacity-75\",children:[\"(\",workout.exercises.length,\")\"]})]})},workout.id))})}),currentWorkout&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900\",children:currentWorkout.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[((_currentWorkout$exerc=currentWorkout.exercises)===null||_currentWorkout$exerc===void 0?void 0:_currentWorkout$exerc.length)||0,\" exercise\",(((_currentWorkout$exerc2=currentWorkout.exercises)===null||_currentWorkout$exerc2===void 0?void 0:_currentWorkout$exerc2.length)||0)!==1?'s':'']})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowExerciseLibrary(true),className:\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\",children:[/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Add Exercise\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto pb-24\",children:!currentWorkout?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Dumbbell,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:\"Select a workout to get started\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Choose a workout from above or create a new one\"})]}):((_currentWorkout$exerc3=currentWorkout.exercises)===null||_currentWorkout$exerc3===void 0?void 0:_currentWorkout$exerc3.length)===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-12 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Target,{className:\"w-8 h-8 text-gray-400\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-medium mb-2 text-gray-700\",children:[\"No exercises in \",currentWorkout.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Use the \\\"Add Exercise\\\" button to add your first exercise\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"p-6 space-y-4\",children:(_currentWorkout$exerc4=currentWorkout.exercises)===null||_currentWorkout$exerc4===void 0?void 0:_currentWorkout$exerc4.map((exercise,exerciseIndex)=>{var _exercise$muscleGroup;const isCollapsed=collapsedExercises[exercise.id];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-1 text-gray-400\",children:/*#__PURE__*/_jsx(GripVertical,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleExerciseCollapse(exercise.id),className:\"p-1 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})}),/*#__PURE__*/_jsxs(\"div\",{children:[editingExerciseName===exercise.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:exercise.name,onChange:e=>updateExerciseName(exerciseIndex,e.target.value),onBlur:()=>setEditingExerciseName(null),onKeyDown:e=>{if(e.key==='Enter')setEditingExerciseName(null);if(e.key==='Escape')setEditingExerciseName(null);},className:\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\",autoFocus:true}):/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\",onClick:()=>setEditingExerciseName(exercise.id),children:exercise.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:(_exercise$muscleGroup=exercise.muscleGroups)===null||_exercise$muscleGroup===void 0?void 0:_exercise$muscleGroup.join(', ')}),isCollapsed&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-1 font-medium\",children:[exercise.sets,\" \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeExercise(exerciseIndex),className:\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\",children:/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"})})]}),!isCollapsed&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-5 pb-5 border-t border-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 mb-4 underline\",children:\"Target\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:\"Sets\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,-1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Minus,{className:\"w-4 h-4 text-gray-600\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\",children:exercise.sets}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateExerciseSets(exerciseIndex,1),className:\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-gray-600\"})})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 px-4 pt-4\",children:Array.from({length:exercise.sets},(_,setIndex)=>{var _exercise$setResults;const setResult=((_exercise$setResults=exercise.setResults)===null||_exercise$setResults===void 0?void 0:_exercise$setResults[setIndex])||{weight:'',reps:''};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-gray-50 rounded-xl relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\",children:setIndex+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pl-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Weight\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.weight||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"lbs\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg text-gray-400\",children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 mb-1 font-medium\",children:\"Reps\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:setResult.reps||'',onChange:e=>updateSetValue(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"10\",className:\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"})]})]})]},setIndex);})})]})]},exercise.id);})})})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b border-gray-100 p-6 shadow-sm\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-center text-gray-900\",children:\"Workout Tracker\"})}),currentTab==='workout'&&/*#__PURE__*/_jsx(WorkoutBuilderView,{}),currentTab==='routine'&&/*#__PURE__*/_jsx(RoutineBuilderView,{}),currentTab==='weekly'&&/*#__PURE__*/_jsx(WeeklySummaryView,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('workout'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='workout'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(Target,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Workout Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('routine'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='routine'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Routine Builder\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab('weekly'),className:\"flex-1 py-3 flex flex-col items-center space-y-1 transition-colors \".concat(currentTab==='weekly'?'text-blue-500':'text-gray-400'),children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium\",children:\"Plan Overview\"})]})]}),showExerciseLibrary&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-100 flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-900\",children:libraryMode==='exercises'?'Exercise Library':'Copy from Other Workouts'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowExerciseLibrary(false);setLibraryMode('exercises');setSelectedExercises([]);setSelectedCopyExercises([]);},className:\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-gray-600\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('exercises'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='exercises'?'bg-blue-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Add New Exercises\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLibraryMode('copy'),className:\"flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all \".concat(libraryMode==='copy'?'bg-green-500 text-white':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:\"Copy from Other Workouts\"})]}),libraryMode==='exercises'&&selectedExercises.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-blue-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-blue-900\",children:[selectedExercises.length,\" exercise\",selectedExercises.length!==1?'s':'',\" selected\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:addMultipleExercises,className:\"px-4 py-2 bg-blue-500 text-white text-sm rounded-lg hover:bg-blue-600 transition-colors font-medium\",children:\"Add Selected\"})]}),libraryMode==='copy'&&selectedCopyExercises.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-green-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-green-900\",children:[selectedCopyExercises.length,\" exercise\",selectedCopyExercises.length!==1?'s':'',\" selected\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:addMultipleCopyExercises,className:\"px-4 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors font-medium\",children:\"Copy Selected\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-6\",children:libraryMode==='exercises'?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(exerciseLibraryByMuscle).map(_ref5=>{let[muscleGroup,exercises]=_ref5;const filteredExercises=exercises.filter(exercise=>exercise.name.toLowerCase().includes(searchTerm.toLowerCase()));if(filteredExercises.length===0)return null;const isCollapsed=collapsedMuscleGroups[muscleGroup];const muscleColors={'Chest':'bg-red-500','Triceps':'bg-orange-500','Shoulders':'bg-yellow-500','Legs':'bg-green-500','Back':'bg-blue-500','Abs':'bg-purple-500','Biceps':'bg-teal-500','Custom':'bg-pink-500'};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMuscleGroupCollapse(muscleGroup),className:\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(muscleColors[muscleGroup]||'bg-gray-400')}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:muscleGroup}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",filteredExercises.length,\" exercises)\"]})]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5 text-gray-400 transition-transform \".concat(!isCollapsed?'rotate-180':'')})]}),!isCollapsed&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 p-4 space-y-3\",children:filteredExercises.map(exercise=>{const isSelected=selectedExercises.some(e=>e.id===exercise.id);return/*#__PURE__*/_jsx(\"div\",{onClick:()=>toggleExerciseSelection(exercise),className:\"bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors cursor-pointer border-2 \".concat(isSelected?'border-blue-500 bg-blue-50':'border-transparent'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded border-2 flex items-center justify-center transition-colors \".concat(isSelected?'bg-blue-500 border-blue-500':'border-gray-300'),children:isSelected&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-white rounded-sm\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:exercise.muscleGroups.join(', ')})]})]})},exercise.id);})})]},muscleGroup);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[createdWorkouts.filter(workout=>{var _workout$exercises;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises=workout.exercises)===null||_workout$exercises===void 0?void 0:_workout$exercises.length)>0;}).map(workout=>{var _workout$exercises2,_workout$exercises3;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-xl p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-md font-semibold text-gray-900 mb-3\",children:[workout.name,\" (\",((_workout$exercises2=workout.exercises)===null||_workout$exercises2===void 0?void 0:_workout$exercises2.length)||0,\" exercises)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[(_workout$exercises3=workout.exercises)===null||_workout$exercises3===void 0?void 0:_workout$exercises3.map((exercise,exerciseIndex)=>{const isSelected=selectedCopyExercises.some(e=>e.id===exercise.id);return/*#__PURE__*/_jsx(\"div\",{onClick:()=>toggleCopyExerciseSelection(exercise),className:\"p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors border-2 \".concat(isSelected?'border-green-500 bg-green-50':'border-transparent'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded border-2 flex items-center justify-center transition-colors \".concat(isSelected?'bg-green-500 border-green-500':'border-gray-300'),children:isSelected&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-white rounded-sm\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:exercise.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[exercise.sets,\" sets \\xD7 \",exercise.repsOrTime==='reps'?\"\".concat(exercise.repsValue,\" reps\"):\"\".concat(exercise.timeValue,\" secs\")]}),exercise.muscleGroups&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:exercise.muscleGroups.join(', ')})]})]})},exercise.id);}),(!workout.exercises||workout.exercises.length===0)&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-400\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No exercises in this workout\"})})]})]},workout.id);}),createdWorkouts.filter(workout=>{var _workout$exercises4;return workout.id!==(currentWorkout===null||currentWorkout===void 0?void 0:currentWorkout.id)&&((_workout$exercises4=workout.exercises)===null||_workout$exercises4===void 0?void 0:_workout$exercises4.length)>0;}).length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-400\",children:[/*#__PURE__*/_jsx(Dumbbell,{className:\"w-12 h-12 mx-auto mb-3 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"No other workouts with exercises to copy from\"})]})]})})]})})]});};export default WorkoutApp;","map":{"version":3,"names":["React","useState","Plus","Search","X","GripVertical","Trash2","ChevronDown","Target","Calendar","BarChart3","Dumbbell","Minus","RotateCcw","jsx","_jsx","jsxs","_jsxs","WorkoutApp","exerciseLibraryByMuscle","id","name","muscleGroups","muscleWeights","exerciseLibrary","Object","values","flat","days","currentDay","setCurrentDay","currentWeek","setCurrentWeek","currentTab","setCurrentTab","showExerciseLibrary","setShowExerciseLibrary","searchTerm","setSearchTerm","dayNames","map","day","workoutPlans","setWorkoutPlans","Array","fill","collapsedExercises","setCollapsedExercises","showUpperLower","setShowUpperLower","libraryMode","setLibraryMode","collapsedMuscleGroups","setCollapsedMuscleGroups","rotationCycles","setRotationCycles","selectedWorkouts","setSelectedWorkouts","createdWorkouts","setCreatedWorkouts","currentWorkout","setCurrentWorkout","isCreatingWorkout","setIsCreatingWorkout","newWorkoutName","setNewWorkoutName","editingExerciseName","setEditingExerciseName","editingWorkoutName","setEditingWorkoutName","selectedExercises","setSelectedExercises","selectedCopyExercises","setSelectedCopyExercises","filteredExercises","filter","exercise","toLowerCase","includes","addExerciseDirectly","newExercise","Date","now","exerciseId","sets","repsOrTime","repsValue","timeValue","setResults","weight","reps","updatedWorkouts","workout","_objectSpread","exercises","addMultipleExercises","length","newExercises","Math","random","toggleExerciseSelection","prev","isSelected","some","e","updateWorkoutNameInline","workoutId","newName","copyExerciseFromWorkout","copiedExercise","set","toggleCopyExerciseSelection","addMultipleCopyExercises","copiedExercises","MuscleGroupBar","_ref","muscleColors","className","children","muscle","index","concat","style","width","title","getUpperLowerDistribution","upperMuscles","lowerMuscles","distribution","upper","lower","core","totalWeight","forEach","upperPercent","round","lowerPercent","corePercent","total","diff","calculateDayMuscleDistribution","muscleTotal","sortedMuscles","entries","_ref2","sort","a","b","top3","slice","remaining","item","otherWeight","reduce","sum","push","maxIndex","indexOf","max","removeExercise","exerciseIndex","updatedExercises","_","toggleExerciseCollapse","updateExerciseSets","change","newSets","updatedExercise","additionalSets","targetValue","toString","updateSetValue","setIndex","field","value","updatedSetResults","updateExerciseName","addWorkout","createWorkout","trim","newWorkout","cancelWorkoutCreation","updateWorkoutName","selectWorkout","addWorkoutToRoutine","updateWorkoutPlans","removeWorkoutFromRoutine","newWorkoutPlans","week","weekIndex","dayIndex","_newWorkoutPlans$week","RoutineBuilderView","onClick","onChange","parseInt","target","num","find","w","WeeklySummaryView","from","_workoutPlans$weekInd","dayPlan","workoutName","idx","toggleMuscleGroupCollapse","muscleGroup","ExerciseLibraryView","filteredExercisesByMuscle","_ref3","filtered","type","placeholder","_ref4","isCollapsed","join","WorkoutBuilderView","_currentWorkout$exerc","_currentWorkout$exerc2","_currentWorkout$exerc3","_currentWorkout$exerc4","autoFocus","onKeyDown","key","onBlur","onDoubleClick","_exercise$muscleGroup","_exercise$setResults","setResult","_ref5","_workout$exercises","_workout$exercises2","_workout$exercises3","_workout$exercises4"],"sources":["/Users/ryanotero/Documents/The Pit/08.19.25 Cursor/src/workout-planner.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, Search, X, GripVertical, Trash2, ChevronDown, Target, Calendar, BarChart3, Dumbbell, Minus, RotateCcw } from 'lucide-react';\n\nconst WorkoutApp = () => {\n  const exerciseLibraryByMuscle = {\n    'Back': [\n      { id: 1, name: 'Cross-Body Lat Pull-Around', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 2, name: 'Seated DB Shoulder Press', muscleGroups: ['Back', 'Shoulders'], muscleWeights: [60, 40] },\n      { id: 3, name: 'Paused Barbell RDL', muscleGroups: ['Back', 'Legs'], muscleWeights: [60, 40] },\n      { id: 4, name: 'Chest-Supported Machine Row', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 5, name: 'Superset A1: Assisted Pull-Up', muscleGroups: ['Back'], muscleWeights: [100] },\n      { id: 6, name: 'Neutral-Grip Lat Pulldown', muscleGroups: ['Back'], muscleWeights: [100] }\n    ],\n    'Chest': [\n      { id: 7, name: 'Low Incline Smith Machine Press', muscleGroups: ['Chest'], muscleWeights: [100] },\n      { id: 8, name: 'Bent-Over Cable Pec Flye', muscleGroups: ['Chest'], muscleWeights: [100] }\n    ],\n    'Legs': [\n      { id: 9, name: 'Machine Hip Adduction', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 10, name: 'Leg Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 11, name: 'Superset B1: Seated Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 12, name: 'Superset B2: Leg Extension', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 13, name: 'Lying Leg Curl', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 14, name: 'Hack Squat', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 15, name: 'Leg Press Calf Press', muscleGroups: ['Legs'], muscleWeights: [100] },\n      { id: 16, name: 'Standing Calf Raise', muscleGroups: ['Legs'], muscleWeights: [100] }\n    ],\n    'Shoulders': [\n      { id: 17, name: 'Cuffed Behind-The-Back Lateral Raise', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 18, name: 'Cable Paused Shrug-In', muscleGroups: ['Shoulders'], muscleWeights: [100] },\n      { id: 19, name: 'Cable Reverse Flye (Mechanical Dropset)', muscleGroups: ['Shoulders'], muscleWeights: [100] }\n    ],\n    'Triceps': [\n      { id: 20, name: 'Overhead Cable Triceps Extension (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 21, name: 'Superset A2: Paused Assisted Dip', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 22, name: 'Triceps Pressdown (Bar)', muscleGroups: ['Triceps'], muscleWeights: [100] },\n      { id: 23, name: 'Cable Triceps Kickback', muscleGroups: ['Triceps'], muscleWeights: [100] }\n    ],\n    'Abs': [\n      { id: 24, name: 'Lying Paused Rope Face Pull', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 25, name: 'Cable Crunch', muscleGroups: ['Abs'], muscleWeights: [100] },\n      { id: 26, name: 'Roman Chair Leg Raise', muscleGroups: ['Abs'], muscleWeights: [100] }\n    ],\n    'Biceps': [\n      { id: 27, name: 'Hammer Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 28, name: 'Bayesian Cable Curl', muscleGroups: ['Biceps'], muscleWeights: [100] },\n      { id: 29, name: 'Bottom-2/3 Constant Tension Preacher Curl', muscleGroups: ['Biceps'], muscleWeights: [100] }\n    ],\n    'Custom': [\n      { id: 30, name: 'Weak Point Exercise 1', muscleGroups: ['Custom'], muscleWeights: [100] },\n      { id: 31, name: 'Weak Point Exercise 2 (optional)', muscleGroups: ['Custom'], muscleWeights: [100] }\n    ]\n  };\n\n  // Flatten the exercise library for backward compatibility\n  const exerciseLibrary = Object.values(exerciseLibraryByMuscle).flat();\n\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const [currentDay, setCurrentDay] = useState(0);\n  const [currentWeek, setCurrentWeek] = useState(0);\n  const [currentTab, setCurrentTab] = useState('workout');\n  const [showExerciseLibrary, setShowExerciseLibrary] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dayNames] = useState(days.map(day => day));\n  const [workoutPlans, setWorkoutPlans] = useState(\n    Array(4).fill().map(() => Array(3).fill().map(() => []))\n  );\n  const [collapsedExercises, setCollapsedExercises] = useState({});\n  const [showUpperLower, setShowUpperLower] = useState(false);\n  const [libraryMode, setLibraryMode] = useState('exercises');\n  const [collapsedMuscleGroups, setCollapsedMuscleGroups] = useState({});\n  \n  // Routine Builder State\n  const [rotationCycles, setRotationCycles] = useState(4);\n  const [selectedWorkouts, setSelectedWorkouts] = useState([]);\n  const [createdWorkouts, setCreatedWorkouts] = useState([]);\n  \n  // Workout Builder State\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [isCreatingWorkout, setIsCreatingWorkout] = useState(false);\n  const [newWorkoutName, setNewWorkoutName] = useState('');\n  const [editingExerciseName, setEditingExerciseName] = useState(null);\n  const [editingWorkoutName, setEditingWorkoutName] = useState(null);\n  const [selectedExercises, setSelectedExercises] = useState([]);\n  const [selectedCopyExercises, setSelectedCopyExercises] = useState([]);\n\n  const filteredExercises = exerciseLibrary.filter(exercise => {\n    return exercise.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const addExerciseDirectly = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const newExercise = {\n      id: Date.now(),\n      exerciseId: exercise.id,\n      name: exercise.name,\n      muscleGroups: exercise.muscleGroups,\n      sets: 3,\n      repsOrTime: 'reps',\n      repsValue: 10,\n      timeValue: 30,\n      setResults: Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, newExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, newExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedExercises([]);\n    setSelectedCopyExercises([]);\n  };\n\n  const addMultipleExercises = () => {\n    if (!currentWorkout || selectedExercises.length === 0) return;\n    \n    const newExercises = selectedExercises.map(exercise => ({\n      id: Date.now() + Math.random(),\n      exerciseId: exercise.id,\n      name: exercise.name,\n      muscleGroups: exercise.muscleGroups,\n      sets: 3,\n      repsOrTime: 'reps',\n      repsValue: 10,\n      timeValue: 30,\n      setResults: Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    }));\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, ...newExercises] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, ...newExercises] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedExercises([]);\n    setSelectedCopyExercises([]);\n  };\n\n  const toggleExerciseSelection = (exercise) => {\n    setSelectedExercises(prev => {\n      const isSelected = prev.some(e => e.id === exercise.id);\n      if (isSelected) {\n        return prev.filter(e => e.id !== exercise.id);\n      } else {\n        return [...prev, exercise];\n      }\n    });\n  };\n\n  const updateWorkoutNameInline = (workoutId, newName) => {\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === workoutId ? { ...workout, name: newName } : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    if (currentWorkout?.id === workoutId) {\n      setCurrentWorkout({ ...currentWorkout, name: newName });\n    }\n  };\n\n  const copyExerciseFromWorkout = (exercise) => {\n    if (!currentWorkout) return;\n    \n    const copiedExercise = {\n      ...exercise,\n      id: Date.now() + Math.random(),\n      setResults: exercise.setResults ? exercise.setResults.map(set => ({ ...set })) : Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    };\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, copiedExercise] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, copiedExercise] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n  };\n\n  const toggleCopyExerciseSelection = (exercise) => {\n    setSelectedCopyExercises(prev => {\n      const isSelected = prev.some(e => e.id === exercise.id);\n      if (isSelected) {\n        return prev.filter(e => e.id !== exercise.id);\n      } else {\n        return [...prev, exercise];\n      }\n    });\n  };\n\n  const addMultipleCopyExercises = () => {\n    if (!currentWorkout || selectedCopyExercises.length === 0) return;\n    \n    const copiedExercises = selectedCopyExercises.map(exercise => ({\n      ...exercise,\n      id: Date.now() + Math.random(),\n      setResults: exercise.setResults ? exercise.setResults.map(set => ({ ...set })) : Array(3).fill().map(() => ({ weight: '', reps: '10' }))\n    }));\n\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: [...workout.exercises, ...copiedExercises] }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: [...currentWorkout.exercises, ...copiedExercises] });\n    setShowExerciseLibrary(false);\n    setLibraryMode('exercises');\n    setSelectedCopyExercises([]);\n  };\n\n  const MuscleGroupBar = ({ muscleGroups, muscleWeights }) => {\n    const muscleColors = {\n      'Chest': 'bg-red-500',\n      'Triceps': 'bg-orange-500',\n      'Shoulders': 'bg-yellow-500',\n      'Legs': 'bg-green-500',\n      'Back': 'bg-blue-500',\n      'Abs': 'bg-purple-500',\n      'Biceps': 'bg-teal-500',\n      'Custom': 'bg-pink-500',\n      'Upper': 'bg-blue-600',\n      'Lower': 'bg-green-600',\n      'Other': 'bg-gray-400'\n    };\n\n    return (\n      <div className=\"w-full h-2 bg-gray-200 rounded-full overflow-hidden flex\">\n        {muscleGroups.map((muscle, index) => (\n          <div\n            key={muscle}\n            className={`${muscleColors[muscle] || 'bg-gray-400'} h-full`}\n            style={{ width: `${muscleWeights[index]}%` }}\n            title={`${muscle}: ${muscleWeights[index]}%`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const getUpperLowerDistribution = (exercises) => {\n    const upperMuscles = ['Chest', 'Triceps', 'Back', 'Biceps', 'Shoulders'];\n    const lowerMuscles = ['Legs'];\n    \n    const distribution = { upper: 0, lower: 0, core: 0 };\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          totalWeight += weight;\n          \n          if (upperMuscles.includes(muscle)) {\n            distribution.upper += weight;\n          } else if (lowerMuscles.includes(muscle)) {\n            distribution.lower += weight;\n          } else if (muscle === 'Abs') {\n            distribution.core += weight;\n          }\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { upper: 0, lower: 0, core: 0 };\n\n    let upperPercent = Math.round((distribution.upper / totalWeight) * 100);\n    let lowerPercent = Math.round((distribution.lower / totalWeight) * 100);\n    let corePercent = Math.round((distribution.core / totalWeight) * 100);\n\n    const total = upperPercent + lowerPercent + corePercent;\n    if (total !== 100 && total > 0) {\n      const diff = 100 - total;\n      if (upperPercent >= lowerPercent && upperPercent >= corePercent) {\n        upperPercent += diff;\n      } else if (lowerPercent >= corePercent) {\n        lowerPercent += diff;\n      } else {\n        corePercent += diff;\n      }\n    }\n\n    return {\n      upper: upperPercent,\n      lower: lowerPercent,\n      core: corePercent\n    };\n  };\n\n  const calculateDayMuscleDistribution = (exercises) => {\n    const muscleTotal = {};\n    let totalWeight = 0;\n\n    exercises.forEach(exercise => {\n      if (exercise.muscleGroups && exercise.muscleWeights) {\n        exercise.muscleGroups.forEach((muscle, index) => {\n          const weight = exercise.muscleWeights[index] || 0;\n          muscleTotal[muscle] = (muscleTotal[muscle] || 0) + weight;\n          totalWeight += weight;\n        });\n      }\n    });\n\n    if (totalWeight === 0) return { muscleGroups: [], muscleWeights: [] };\n\n    const sortedMuscles = Object.entries(muscleTotal)\n      .map(([muscle, weight]) => ({ \n        muscle, \n        weight: (weight / totalWeight) * 100\n      }))\n      .sort((a, b) => b.weight - a.weight);\n\n    const top3 = sortedMuscles.slice(0, 3);\n    const remaining = sortedMuscles.slice(3);\n    \n    const muscleGroups = top3.map(item => item.muscle);\n    let muscleWeights = top3.map(item => item.weight);\n    \n    if (remaining.length > 0) {\n      const otherWeight = remaining.reduce((sum, item) => sum + item.weight, 0);\n      muscleGroups.push('Other');\n      muscleWeights.push(otherWeight);\n    }\n\n    muscleWeights = muscleWeights.map(weight => Math.round(weight));\n    \n    const total = muscleWeights.reduce((sum, weight) => sum + weight, 0);\n    if (total !== 100 && muscleWeights.length > 0) {\n      const diff = 100 - total;\n      const maxIndex = muscleWeights.indexOf(Math.max(...muscleWeights));\n      muscleWeights[maxIndex] += diff;\n    }\n\n    return { muscleGroups, muscleWeights };\n  };\n\n  const removeExercise = (exerciseIndex) => {\n    if (!currentWorkout) return;\n    \n    const updatedExercises = currentWorkout.exercises.filter((_, index) => index !== exerciseIndex);\n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const toggleExerciseCollapse = (exerciseId) => {\n    setCollapsedExercises(prev => ({\n      ...prev,\n      [exerciseId]: !prev[exerciseId]\n    }));\n  };\n\n  const updateExerciseSets = (exerciseIndex, change) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const newSets = Math.max(1, exercise.sets + change);\n    \n    const updatedExercise = { ...exercise, sets: newSets };\n    \n    if (newSets > exercise.setResults.length) {\n      const additionalSets = newSets - exercise.setResults.length;\n      const targetValue = exercise.repsOrTime === 'time' ? exercise.timeValue : exercise.repsValue;\n      updatedExercise.setResults = [\n        ...exercise.setResults,\n        ...Array(additionalSets).fill().map(() => ({ weight: '', reps: targetValue.toString() }))\n      ];\n    } else if (newSets < exercise.setResults.length) {\n      updatedExercise.setResults = exercise.setResults.slice(0, newSets);\n    }\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateSetValue = (exerciseIndex, setIndex, field, value) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const exercise = currentWorkout.exercises[exerciseIndex];\n    const updatedSetResults = [...exercise.setResults];\n    \n    if (!updatedSetResults[setIndex]) {\n      updatedSetResults[setIndex] = { weight: '', reps: '' };\n    }\n    \n    updatedSetResults[setIndex][field] = value;\n    \n    const updatedExercise = { ...exercise, setResults: updatedSetResults };\n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = updatedExercise;\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  const updateExerciseName = (exerciseIndex, newName) => {\n    if (!currentWorkout?.exercises[exerciseIndex]) return;\n    \n    const updatedExercises = [...currentWorkout.exercises];\n    updatedExercises[exerciseIndex] = { ...updatedExercises[exerciseIndex], name: newName };\n    \n    const updatedWorkouts = createdWorkouts.map(workout => \n      workout.id === currentWorkout.id \n        ? { ...workout, exercises: updatedExercises }\n        : workout\n    );\n    setCreatedWorkouts(updatedWorkouts);\n    setCurrentWorkout({ ...currentWorkout, exercises: updatedExercises });\n  };\n\n  // Routine Builder Functions\n  const addWorkout = () => {\n    setIsCreatingWorkout(true);\n    setNewWorkoutName('');\n  };\n  \n  const createWorkout = () => {\n    if (!newWorkoutName.trim()) return;\n    \n    const newWorkout = {\n      id: Date.now(),\n      name: newWorkoutName.trim(),\n      exercises: []\n    };\n    setCreatedWorkouts(prev => [...prev, newWorkout]);\n    setCurrentWorkout(newWorkout);\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n  \n  const cancelWorkoutCreation = () => {\n    setIsCreatingWorkout(false);\n    setNewWorkoutName('');\n  };\n\n  const updateWorkoutName = (id, newName) => {\n    setCreatedWorkouts(prev => \n      prev.map(workout => \n        workout.id === id ? { ...workout, name: newName } : workout\n      )\n    );\n    if (currentWorkout?.id === id) {\n      setCurrentWorkout({ ...currentWorkout, name: newName });\n    }\n  };\n  \n  const selectWorkout = (workout) => {\n    setCurrentWorkout(workout);\n  };\n\n  const addWorkoutToRoutine = (workoutId) => {\n    if (!selectedWorkouts.includes(workoutId)) {\n      setSelectedWorkouts(prev => [...prev, workoutId]);\n      updateWorkoutPlans();\n    }\n  };\n\n  const removeWorkoutFromRoutine = (workoutId) => {\n    setSelectedWorkouts(prev => prev.filter(id => id !== workoutId));\n    updateWorkoutPlans();\n  };\n\n  const updateWorkoutPlans = () => {\n    const newWorkoutPlans = Array(rotationCycles).fill().map(() => \n      Array(selectedWorkouts.length).fill().map(() => [])\n    );\n    \n    // Preserve existing data where possible\n    workoutPlans.forEach((week, weekIndex) => {\n      if (weekIndex < rotationCycles && week) {\n        week.forEach((day, dayIndex) => {\n          if (dayIndex < selectedWorkouts.length && newWorkoutPlans[weekIndex]?.[dayIndex]) {\n            newWorkoutPlans[weekIndex][dayIndex] = day;\n          }\n        });\n      }\n    });\n    \n    setWorkoutPlans(newWorkoutPlans);\n    \n    // Reset current selections if they're out of bounds\n    if (currentDay >= selectedWorkouts.length && selectedWorkouts.length > 0) setCurrentDay(0);\n    if (currentWeek >= rotationCycles) setCurrentWeek(0);\n  };\n\n  const RoutineBuilderView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Routine Builder</h2>\n        \n        {/* Input Fields */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Routine Settings</h3>\n          \n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Select Workouts for Routine\n              </label>\n              <div className=\"space-y-2\">\n                {createdWorkouts.map(workout => (\n                  <div key={workout.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium text-gray-900\">{workout.name}</span>\n                    <div className=\"flex items-center space-x-2\">\n                      {selectedWorkouts.includes(workout.id) ? (\n                        <button\n                          onClick={() => removeWorkoutFromRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600\"\n                        >\n                          Remove\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => addWorkoutToRoutine(workout.id)}\n                          className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded-lg hover:bg-blue-600\"\n                        >\n                          Add to Routine\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                \n                <button\n                  onClick={addWorkout}\n                  className=\"w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-400 hover:text-blue-600 transition-colors\"\n                >\n                  + Create New Workout\n                </button>\n              </div>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Number of Cycles\n              </label>\n              <select\n                value={rotationCycles}\n                onChange={(e) => {\n                  setRotationCycles(parseInt(e.target.value));\n                  updateWorkoutPlans();\n                }}\n                className=\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {[1,2,3,4,5,6,8,10,12].map(num => (\n                  <option key={num} value={num}>{num} cycle{num > 1 ? 's' : ''}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          \n          {selectedWorkouts.length > 0 && (\n            <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n              <h4 className=\"font-medium text-blue-900 mb-2\">Current Routine:</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedWorkouts.map((workoutId, index) => {\n                  const workout = createdWorkouts.find(w => w.id === workoutId);\n                  return (\n                    <span key={workoutId} className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded\">\n                      {index + 1}. {workout?.name}\n                    </span>\n                  );\n                })}\n              </div>\n              <p className=\"text-sm text-blue-700 mt-2\">\n                {selectedWorkouts.length} workouts × {rotationCycles} cycles = {selectedWorkouts.length * rotationCycles} total workout days\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const WeeklySummaryView = () => (\n    <div className=\"flex-1 overflow-y-auto pb-24 bg-gray-50\">\n      <div className=\"p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Plan Overview</h2>\n        <div className=\"space-y-3\">\n          {Array.from({length: rotationCycles}, (_, weekIndex) => (\n            <div key={weekIndex} className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n              <div className=\"p-5\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cycle {weekIndex + 1}</h3>\n                <div className=\"space-y-3\">\n                  {Array.from({length: selectedWorkouts.length}, (_, dayIndex) => {\n                    const dayPlan = workoutPlans[weekIndex]?.[dayIndex] || [];\n                    const { muscleGroups, muscleWeights } = calculateDayMuscleDistribution(dayPlan);\n                    const workoutId = selectedWorkouts[dayIndex];\n                    const workout = createdWorkouts.find(w => w.id === workoutId);\n                    const workoutName = workout ? workout.name : `Workout ${dayIndex + 1}`;\n                    \n                    return (\n                      <div key={dayIndex} className=\"bg-gray-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-gray-700\">{workoutName}</span>\n                          <span className=\"text-xs text-gray-500\">\n                            {dayPlan.length} exercise{dayPlan.length !== 1 ? 's' : ''}\n                          </span>\n                        </div>\n                        \n                        {muscleGroups.length > 0 && (\n                          <div className=\"mb-2\">\n                            <MuscleGroupBar muscleGroups={muscleGroups} muscleWeights={muscleWeights} />\n                          </div>\n                        )}\n                        \n                        {dayPlan.length > 0 ? (\n                          <div className=\"space-y-1\">\n                            {dayPlan.map((exercise, idx) => (\n                              <div key={idx} className=\"text-xs text-gray-600\">\n                                {exercise.name} - {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <div className=\"text-center py-2 text-gray-400\">\n                            <p className=\"text-xs\">Rest day</p>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const toggleMuscleGroupCollapse = (muscleGroup) => {\n    setCollapsedMuscleGroups(prev => ({\n      ...prev,\n      [muscleGroup]: !prev[muscleGroup]\n    }));\n  };\n\n  const ExerciseLibraryView = () => {\n    const filteredExercisesByMuscle = {};\n    \n    // Filter exercises by search term and organize by muscle group\n    Object.entries(exerciseLibraryByMuscle).forEach(([muscleGroup, exercises]) => {\n      const filtered = exercises.filter(exercise => \n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      if (filtered.length > 0) {\n        filteredExercisesByMuscle[muscleGroup] = filtered;\n      }\n    });\n\n    return (\n      <div className=\"flex-1 flex flex-col pb-24 bg-gray-50\">\n        <div className=\"p-6 bg-white border-b border-gray-100\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Exercise Library</h2>\n          <div className=\"relative\">\n            <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search exercises...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-12 pr-4 py-3 bg-gray-50 border-0 rounded-xl text-gray-900 placeholder-gray-500 focus:bg-white focus:ring-2 focus:ring-blue-500 transition-all\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"space-y-4\">\n            {Object.entries(filteredExercisesByMuscle).map(([muscleGroup, exercises]) => {\n              const isCollapsed = collapsedMuscleGroups[muscleGroup];\n              const muscleColors = {\n                'Chest': 'bg-red-500',\n                'Triceps': 'bg-orange-500',\n                'Shoulders': 'bg-yellow-500',\n                'Legs': 'bg-green-500',\n                'Back': 'bg-blue-500',\n                'Abs': 'bg-purple-500',\n                'Biceps': 'bg-teal-500',\n                'Custom': 'bg-pink-500'\n              };\n\n              return (\n                <div key={muscleGroup} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                  <button\n                    onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                    className=\"w-full p-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                      <span className=\"text-sm text-gray-500\">({exercises.length} exercises)</span>\n                    </div>\n                    <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                  </button>\n                  \n                  {!isCollapsed && (\n                    <div className=\"border-t border-gray-100 p-4 space-y-3\">\n                      {exercises.map(exercise => (\n                        <div\n                          key={exercise.id}\n                          className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex-1\">\n                            <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                            {exercise.muscleWeights && (\n                              <div className=\"mt-2 mb-1\">\n                                <MuscleGroupBar \n                                  muscleGroups={exercise.muscleGroups} \n                                  muscleWeights={exercise.muscleWeights} \n                                />\n                              </div>\n                            )}\n                            <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                          </div>\n                          <button\n                            onClick={() => addExerciseDirectly(exercise)}\n                            className=\"ml-4 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center hover:bg-blue-600 transition-colors shadow-md\"\n                          >\n                            <Plus className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const WorkoutBuilderView = () => {\n    return (\n      <div className=\"flex-1 flex flex-col bg-gray-50\">\n        {/* Workout Repository */}\n        <div className=\"bg-white px-6 py-4 border-b border-gray-100\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Workout Builder</h2>\n            {isCreatingWorkout ? (\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"text\"\n                  value={newWorkoutName}\n                  onChange={(e) => setNewWorkoutName(e.target.value)}\n                  placeholder=\"Workout name\"\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  autoFocus\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') createWorkout();\n                    if (e.key === 'Escape') cancelWorkoutCreation();\n                  }}\n                />\n                <button\n                  onClick={createWorkout}\n                  className=\"px-3 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Create\n                </button>\n                <button\n                  onClick={cancelWorkoutCreation}\n                  className=\"px-3 py-2 bg-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-400 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={addWorkout}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-xl text-sm font-medium hover:bg-blue-600 transition-colors shadow-md\"\n              >\n                + Create New Workout\n              </button>\n            )}\n          </div>\n          \n          {/* Created Workouts */}\n          {createdWorkouts.length > 0 && (\n            <div className=\"mb-4\">\n              <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n                {createdWorkouts.map(workout => (\n                  <div key={workout.id} className=\"flex items-center space-x-1\">\n                    {editingWorkoutName === workout.id ? (\n                      <input\n                        type=\"text\"\n                        value={workout.name}\n                        onChange={(e) => updateWorkoutNameInline(workout.id, e.target.value)}\n                        onBlur={() => setEditingWorkoutName(null)}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter') setEditingWorkoutName(null);\n                          if (e.key === 'Escape') setEditingWorkoutName(null);\n                        }}\n                        className=\"px-3 py-2 border border-blue-500 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        autoFocus\n                      />\n                    ) : (\n                      <button\n                        onClick={() => selectWorkout(workout)}\n                        onDoubleClick={() => setEditingWorkoutName(workout.id)}\n                        className={`px-4 py-2 rounded-xl text-sm font-medium whitespace-nowrap transition-all ${\n                          currentWorkout?.id === workout.id\n                            ? 'bg-blue-500 text-white shadow-md'\n                            : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                        }`}\n                      >\n                        {workout.name}\n                        {workout.exercises && workout.exercises.length > 0 && (\n                          <span className=\"ml-2 text-xs opacity-75\">({workout.exercises.length})</span>\n                        )}\n                      </button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {currentWorkout && (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-xl font-bold text-gray-900\">{currentWorkout.name}</h3>\n                <p className=\"text-sm text-gray-500\">\n                  {currentWorkout.exercises?.length || 0} exercise{(currentWorkout.exercises?.length || 0) !== 1 ? 's' : ''}\n                </p>\n              </div>\n              <button\n                onClick={() => setShowExerciseLibrary(true)}\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-xl font-semibold flex items-center space-x-2 hover:bg-blue-600 transition-colors shadow-lg\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                <span>Add Exercise</span>\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto pb-24\">\n          {!currentWorkout ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Dumbbell className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">Select a workout to get started</p>\n              <p className=\"text-sm text-gray-500\">Choose a workout from above or create a new one</p>\n            </div>\n          ) : currentWorkout.exercises?.length === 0 ? (\n            <div className=\"p-12 text-center text-gray-500\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <Target className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <p className=\"text-xl font-medium mb-2 text-gray-700\">No exercises in {currentWorkout.name}</p>\n              <p className=\"text-sm text-gray-500\">Use the \"Add Exercise\" button to add your first exercise</p>\n            </div>\n          ) : (\n            <div className=\"p-6 space-y-4\">\n              {currentWorkout.exercises?.map((exercise, exerciseIndex) => {\n                const isCollapsed = collapsedExercises[exercise.id];\n                \n                return (\n                  <div key={exercise.id} className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                    <div className=\"flex items-center justify-between p-5\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"p-1 text-gray-400\">\n                          <GripVertical className=\"w-4 h-4\" />\n                        </div>\n                        <button\n                          onClick={() => toggleExerciseCollapse(exercise.id)}\n                          className=\"p-1 hover:bg-gray-100 rounded-lg transition-colors\"\n                        >\n                          <ChevronDown className={`w-4 h-4 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        <div>\n                          {editingExerciseName === exercise.id ? (\n                            <input\n                              type=\"text\"\n                              value={exercise.name}\n                              onChange={(e) => updateExerciseName(exerciseIndex, e.target.value)}\n                              onBlur={() => setEditingExerciseName(null)}\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter') setEditingExerciseName(null);\n                                if (e.key === 'Escape') setEditingExerciseName(null);\n                              }}\n                              className=\"text-lg font-semibold text-gray-900 bg-white border border-blue-500 rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                              autoFocus\n                            />\n                          ) : (\n                            <h3 \n                              className=\"text-lg font-semibold text-gray-900 cursor-pointer hover:text-blue-600 transition-colors\"\n                              onClick={() => setEditingExerciseName(exercise.id)}\n                            >\n                              {exercise.name}\n                            </h3>\n                          )}\n                          <p className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups?.join(', ')}</p>\n                          {isCollapsed && (\n                            <p className=\"text-sm text-gray-600 mt-1 font-medium\">\n                              {exercise.sets} × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removeExercise(exerciseIndex)}\n                        className=\"p-2 text-red-500 hover:bg-red-50 rounded-xl transition-colors\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n\n                    {!isCollapsed && (\n                      <div className=\"px-5 pb-5 border-t border-gray-50\">\n                        <div className=\"py-4 border-b border-gray-100\">\n                          <h4 className=\"text-sm font-medium text-gray-700 mb-4 underline\">Target</h4>\n                          \n                          <div className=\"mb-4\">\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-sm font-medium text-gray-700\">Sets</span>\n                              <div className=\"flex items-center space-x-4\">\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, -1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Minus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                                <span className=\"text-xl font-semibold text-gray-900 min-w-[2rem] text-center\">{exercise.sets}</span>\n                                <button\n                                  onClick={() => updateExerciseSets(exerciseIndex, 1)}\n                                  className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors\"\n                                >\n                                  <Plus className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-3 px-4 pt-4\">\n                          {Array.from({ length: exercise.sets }, (_, setIndex) => {\n                            const setResult = exercise.setResults?.[setIndex] || { weight: '', reps: '' };\n                            \n                            return (\n                              <div key={setIndex} className=\"p-3 bg-gray-50 rounded-xl relative\">\n                                <div className=\"absolute -top-2 -left-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold border-2 border-white shadow-sm z-10\">\n                                  {setIndex + 1}\n                                </div>\n                                <div className=\"flex items-center justify-between pl-4\">\n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Weight</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.weight || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'weight', e.target.value)}\n                                      placeholder=\"lbs\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                  \n                                  <span className=\"text-lg text-gray-400\">×</span>\n                                  \n                                  <div className=\"flex flex-col items-center\">\n                                    <span className=\"text-xs text-gray-500 mb-1 font-medium\">Reps</span>\n                                    <input\n                                      type=\"text\"\n                                      value={setResult.reps || ''}\n                                      onChange={(e) => updateSetValue(exerciseIndex, setIndex, 'reps', e.target.value)}\n                                      placeholder=\"10\"\n                                      className=\"w-16 px-2 py-1.5 bg-white border-0 rounded-lg text-sm text-center font-medium text-gray-900 focus:ring-1 focus:ring-blue-500 shadow-sm\"\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-gray-50 min-h-screen flex flex-col\">\n      <div className=\"bg-white border-b border-gray-100 p-6 shadow-sm\">\n        <h1 className=\"text-2xl font-bold text-center text-gray-900\">Workout Tracker</h1>\n      </div>\n\n      {currentTab === 'workout' && <WorkoutBuilderView />}\n      {currentTab === 'routine' && <RoutineBuilderView />}\n      {currentTab === 'weekly' && <WeeklySummaryView />}\n\n      <div className=\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white/95 backdrop-blur-md border-t border-gray-200 flex\">\n        <button\n          onClick={() => setCurrentTab('workout')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'workout' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <Target className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Workout Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('routine')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'routine' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <RotateCcw className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Routine Builder</span>\n        </button>\n        <button\n          onClick={() => setCurrentTab('weekly')}\n          className={`flex-1 py-3 flex flex-col items-center space-y-1 transition-colors ${\n            currentTab === 'weekly' ? 'text-blue-500' : 'text-gray-400'\n          }`}\n        >\n          <BarChart3 className=\"w-4 h-4\" />\n          <span className=\"text-xs font-medium\">Plan Overview</span>\n        </button>\n      </div>\n\n      {showExerciseLibrary && (\n        <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm z-50 flex items-end\">\n          <div className=\"bg-white w-full h-4/5 rounded-t-3xl flex flex-col shadow-2xl\">\n            <div className=\"p-6 border-b border-gray-100 flex items-center justify-between\">\n              <h2 className=\"text-xl font-bold text-gray-900\">\n                {libraryMode === 'exercises' ? 'Exercise Library' : 'Copy from Other Workouts'}\n              </h2>\n              <button\n                onClick={() => {\n                  setShowExerciseLibrary(false);\n                  setLibraryMode('exercises');\n                  setSelectedExercises([]);\n                  setSelectedCopyExercises([]);\n                }}\n                className=\"w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-colors\"\n              >\n                <X className=\"w-4 h-4 text-gray-600\" />\n              </button>\n            </div>\n\n            <div className=\"p-4 border-b border-gray-100\">\n              <div className=\"flex space-x-2 mb-3\">\n                <button\n                  onClick={() => setLibraryMode('exercises')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'exercises'\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Add New Exercises\n                </button>\n                <button\n                  onClick={() => setLibraryMode('copy')}\n                  className={`flex-1 py-2 px-4 rounded-xl text-sm font-medium transition-all ${\n                    libraryMode === 'copy'\n                      ? 'bg-green-500 text-white'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  Copy from Other Workouts\n                </button>\n              </div>\n              \n              {libraryMode === 'exercises' && selectedExercises.length > 0 && (\n                <div className=\"flex items-center justify-between bg-blue-50 p-3 rounded-lg\">\n                  <span className=\"text-sm font-medium text-blue-900\">\n                    {selectedExercises.length} exercise{selectedExercises.length !== 1 ? 's' : ''} selected\n                  </span>\n                  <button\n                    onClick={addMultipleExercises}\n                    className=\"px-4 py-2 bg-blue-500 text-white text-sm rounded-lg hover:bg-blue-600 transition-colors font-medium\"\n                  >\n                    Add Selected\n                  </button>\n                </div>\n              )}\n              \n              {libraryMode === 'copy' && selectedCopyExercises.length > 0 && (\n                <div className=\"flex items-center justify-between bg-green-50 p-3 rounded-lg\">\n                  <span className=\"text-sm font-medium text-green-900\">\n                    {selectedCopyExercises.length} exercise{selectedCopyExercises.length !== 1 ? 's' : ''} selected\n                  </span>\n                  <button\n                    onClick={addMultipleCopyExercises}\n                    className=\"px-4 py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors font-medium\"\n                  >\n                    Copy Selected\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-6\">\n              {libraryMode === 'exercises' ? (\n                <div className=\"space-y-4\">\n                  {Object.entries(exerciseLibraryByMuscle).map(([muscleGroup, exercises]) => {\n                    const filteredExercises = exercises.filter(exercise => \n                      exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    \n                    if (filteredExercises.length === 0) return null;\n                    \n                    const isCollapsed = collapsedMuscleGroups[muscleGroup];\n                    const muscleColors = {\n                      'Chest': 'bg-red-500',\n                      'Triceps': 'bg-orange-500',\n                      'Shoulders': 'bg-yellow-500',\n                      'Legs': 'bg-green-500',\n                      'Back': 'bg-blue-500',\n                      'Abs': 'bg-purple-500',\n                      'Biceps': 'bg-teal-500',\n                      'Custom': 'bg-pink-500'\n                    };\n\n                    return (\n                      <div key={muscleGroup} className=\"bg-gray-50 rounded-xl overflow-hidden\">\n                        <button\n                          onClick={() => toggleMuscleGroupCollapse(muscleGroup)}\n                          className=\"w-full p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className={`w-4 h-4 rounded-full ${muscleColors[muscleGroup] || 'bg-gray-400'}`}></div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">{muscleGroup}</h3>\n                            <span className=\"text-sm text-gray-500\">({filteredExercises.length} exercises)</span>\n                          </div>\n                          <ChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${!isCollapsed ? 'rotate-180' : ''}`} />\n                        </button>\n                        \n                        {!isCollapsed && (\n                          <div className=\"border-t border-gray-200 p-4 space-y-3\">\n                            {filteredExercises.map(exercise => {\n                              const isSelected = selectedExercises.some(e => e.id === exercise.id);\n                              return (\n                                <div\n                                  key={exercise.id}\n                                  onClick={() => toggleExerciseSelection(exercise)}\n                                  className={`bg-white rounded-lg p-3 flex items-center justify-between hover:bg-gray-50 transition-colors cursor-pointer border-2 ${\n                                    isSelected ? 'border-blue-500 bg-blue-50' : 'border-transparent'\n                                  }`}\n                                >\n                                  <div className=\"flex items-center space-x-3 flex-1\">\n                                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-colors ${\n                                      isSelected ? 'bg-blue-500 border-blue-500' : 'border-gray-300'\n                                    }`}>\n                                      {isSelected && <div className=\"w-2 h-2 bg-white rounded-sm\"></div>}\n                                    </div>\n                                    <div className=\"flex-1\">\n                                      <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                                      <div className=\"text-sm text-gray-500 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                                    </div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {createdWorkouts\n                    .filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0)\n                    .map(workout => (\n                    <div key={workout.id} className=\"bg-gray-50 rounded-xl p-4\">\n                      <h3 className=\"text-md font-semibold text-gray-900 mb-3\">\n                        {workout.name} ({workout.exercises?.length || 0} exercises)\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {workout.exercises?.map((exercise, exerciseIndex) => {\n                          const isSelected = selectedCopyExercises.some(e => e.id === exercise.id);\n                          return (\n                            <div\n                              key={exercise.id}\n                              onClick={() => toggleCopyExerciseSelection(exercise)}\n                              className={`p-3 bg-white rounded-lg flex items-center justify-between hover:bg-gray-100 cursor-pointer transition-colors border-2 ${\n                                isSelected ? 'border-green-500 bg-green-50' : 'border-transparent'\n                              }`}\n                            >\n                              <div className=\"flex items-center space-x-3 flex-1\">\n                                <div className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-colors ${\n                                  isSelected ? 'bg-green-500 border-green-500' : 'border-gray-300'\n                                }`}>\n                                  {isSelected && <div className=\"w-2 h-2 bg-white rounded-sm\"></div>}\n                                </div>\n                                <div className=\"flex-1\">\n                                  <div className=\"font-medium text-gray-900\">{exercise.name}</div>\n                                  <div className=\"text-xs text-gray-500 mt-1\">\n                                    {exercise.sets} sets × {exercise.repsOrTime === 'reps' ? `${exercise.repsValue} reps` : `${exercise.timeValue} secs`}\n                                  </div>\n                                  {exercise.muscleGroups && (\n                                    <div className=\"text-xs text-gray-400 mt-1\">{exercise.muscleGroups.join(', ')}</div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                        {(!workout.exercises || workout.exercises.length === 0) && (\n                          <div className=\"text-center py-4 text-gray-400\">\n                            <p className=\"text-sm\">No exercises in this workout</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  {createdWorkouts.filter(workout => workout.id !== currentWorkout?.id && workout.exercises?.length > 0).length === 0 && (\n                    <div className=\"text-center py-8 text-gray-400\">\n                      <Dumbbell className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n                      <p className=\"text-sm\">No other workouts with exercises to copy from</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkoutApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}